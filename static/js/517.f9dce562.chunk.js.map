{"version":3,"file":"static/js/517.f9dce562.chunk.js","mappings":"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","sources":["components/common/ErrorBoundary.js","theme/effects.js","components/common/SkillTagList.js","components/hero/skillsData.js","components/hero/HeroContent.js","utils/scrollUtils.js","components/hero/ScrollIndicator.js","components/hero/MobileScrollHelper.js","components/hero/background3d/constants.js","components/hero/background3d/SceneContext.js","components/hero/background3d/utils/sceneThemeUtils.js","components/hero/background3d/utils/ObjectPool.js","components/hero/background3d/scenes/SphereScene.js","components/hero/background3d/scenes/BoxScene.js","components/hero/background3d/scenes/TorusScene.js","components/hero/background3d/ActiveScene.js","components/hero/background3d/components/LoadingFallback.js","components/hero/background3d/InteractiveCamera.js","components/hero/background3d/Background3D.js","components/hero/background3d/components/InteractionGuide.js","components/hero/Hero.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Box, Typography, Button, Paper, Divider } from '@mui/material';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport BugReportIcon from '@mui/icons-material/BugReport';\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\n\n/**\n * Enhanced ErrorBoundary Component\n * \n * Catches and handles JavaScript errors anywhere in the child component tree.\n * Provides detailed error reporting and recovery options.\n */\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      hasError: false,\n      error: null,\n      errorInfo: null,\n      componentStack: '',\n      showDetails: false,\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Capture error details for logging and display\n    this.setState({\n      errorInfo,\n      componentStack: errorInfo?.componentStack || 'No stack trace available'\n    });\n\n    // Log error to monitoring service or console\n    console.error('Error caught by ErrorBoundary:', error);\n    console.error('Component stack:', errorInfo?.componentStack);\n\n    // Track error with analytics if available\n    if (window.gtag) {\n      window.gtag('event', 'error', {\n        error_message: error?.message || 'Unknown error',\n        error_component: this.props.componentName || 'Unknown component',\n        error_stack: errorInfo?.componentStack?.substring(0, 500) || 'No stack trace',\n        error_type: error?.name || 'Unknown type'\n      });\n    }\n  }\n\n  handleRefresh = () => {\n    // Attempt to recover by refreshing the component\n    this.setState({ \n      hasError: false,\n      error: null,\n      errorInfo: null,\n      componentStack: '',\n      showDetails: false\n    });\n  }\n\n  handleReload = () => {\n    // Reload the entire page as a last resort\n    window.location.reload();\n  }\n\n  toggleDetails = () => {\n    this.setState(prevState => ({\n      showDetails: !prevState.showDetails\n    }));\n  }\n\n  render() {\n    const { hasError, error, componentStack, showDetails } = this.state;\n    const { \n      componentName = 'Component', \n      fallback,\n      errorStyles,\n      children\n    } = this.props;\n\n    if (hasError) {\n      // Render custom fallback if provided\n      if (fallback) {\n        return fallback;\n      }\n\n      // Otherwise, render default error UI\n      return (\n        <Box \n          sx={{\n            p: 3,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            minHeight: '200px',\n            width: '100%',\n            textAlign: 'center',\n            ...errorStyles\n          }}\n        >\n          <ErrorOutlineIcon \n            color=\"error\" \n            sx={{ fontSize: 48, mb: 2 }} \n          />\n          \n          <Typography variant=\"h5\" color=\"error\" gutterBottom>\n            {componentName} encountered a problem\n          </Typography>\n          \n          <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 3, maxWidth: '600px' }}>\n            {error?.message || 'An unexpected error occurred. We apologize for the inconvenience.'}\n          </Typography>\n          \n          <Box sx={{ display: 'flex', gap: 2, mb: 3 }}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              startIcon={<RefreshIcon />}\n              onClick={this.handleRefresh}\n            >\n              Try Again\n            </Button>\n            \n            <Button\n              variant=\"outlined\"\n              color=\"error\"\n              startIcon={<BugReportIcon />}\n              onClick={this.toggleDetails}\n            >\n              {showDetails ? 'Hide Details' : 'Show Details'}\n            </Button>\n          </Box>\n          \n          {showDetails && (\n            <Paper elevation={2} sx={{ p: 2, width: '100%', maxWidth: '800px', overflow: 'auto', textAlign: 'left' }}>\n              <Typography variant=\"subtitle2\" color=\"error\" gutterBottom>\n                Error Details:\n              </Typography>\n              \n              <Typography variant=\"body2\" component=\"div\" sx={{ mb: 2, fontFamily: 'monospace', fontSize: '0.85rem' }}>\n                <Box component=\"pre\" sx={{ whiteSpace: 'pre-wrap', wordBreak: 'break-word' }}>\n                  {error?.toString() || 'Unknown error'}\n                </Box>\n              </Typography>\n              \n              <Divider sx={{ my: 2 }} />\n              \n              <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom>\n                Component Stack:\n              </Typography>\n              \n              <Typography variant=\"body2\" component=\"div\" sx={{ fontFamily: 'monospace', fontSize: '0.75rem' }}>\n                <Box component=\"pre\" sx={{ \n                  whiteSpace: 'pre-wrap', \n                  wordBreak: 'break-word',\n                  backgroundColor: 'rgba(0, 0, 0, 0.04)',\n                  p: 1,\n                  borderRadius: 1,\n                  maxHeight: '200px',\n                  overflow: 'auto'\n                }}>\n                  {componentStack}\n                </Box>\n              </Typography>\n            </Paper>\n          )}\n        </Box>\n      );\n    }\n\n    // If no error, render children normally\n    return children;\n  }\n}\n\nexport default ErrorBoundary;\n","/**\n * Effects tokens for the design system\n * These tokens define visual effects like glassmorphism, overlays, and filters\n */\n\nconst effects = {\n  glassmorphism: {\n    light: {\n      background: 'rgba(5, 38, 45, 0.20)',\n      backgroundHover: 'rgba(5, 38, 45, 0.30)',\n      backgroundActive: 'rgba(5, 38, 45, 0.25)',\n      border: 'rgba(5, 38, 45, 0.3)',\n      borderHover: 'rgba(5, 38, 45, 0.4)',\n      blur: '8px',\n      blurHover: '12px',\n      shadow: '0px 2px 4px -1px rgba(0,0,0,0.1),0px 4px 5px 0px rgba(0,0,0,0.07),0px 1px 10px 0px rgba(0,0,0,0.06)',\n      shadowHover: '0px 5px 5px -3px rgba(0,0,0,0.1),0px 8px 10px 1px rgba(0,0,0,0.07),0px 3px 14px 2px rgba(0,0,0,0.06)',\n    },\n    dark: {\n      background: 'rgba(255, 255, 255, 0.15)',\n      backgroundHover: 'rgba(255, 255, 255, 0.25)',\n      backgroundActive: 'rgba(255, 255, 255, 0.2)',\n      border: 'rgba(255, 255, 255, 0.3)',\n      borderHover: 'rgba(255, 255, 255, 0.4)',\n      blur: '8px',\n      blurHover: '12px',\n      shadow: '0px 2px 4px -1px rgba(0,0,0,0.1),0px 4px 5px 0px rgba(0,0,0,0.07),0px 1px 10px 0px rgba(0,0,0,0.06)',\n      shadowHover: '0px 5px 5px -3px rgba(0,0,0,0.1),0px 8px 10px 1px rgba(0,0,0,0.07),0px 3px 14px 2px rgba(0,0,0,0.06)',\n    }\n  },\n  // Dedicated tokens for chip glass styling\n  chipGlass: {\n    light: {\n      // Black glass with light foreground for light theme\n      background: 'rgba(0, 0, 0, 0.24)',\n      hoverBackground: 'rgba(0, 0, 0, 0.34)',\n      activeBackground: 'rgba(0, 0, 0, 0.28)',\n      border: 'rgba(255, 255, 255, 0.22)',\n      text: 'rgba(255, 255, 255, 0.92)',\n      icon: 'rgba(255, 255, 255, 0.92)',\n      blur: '8px',\n      blurHover: '12px',\n    },\n    dark: {\n      // White glass with light foreground for dark theme\n      background: 'rgba(255, 255, 255, 0.15)',\n      hoverBackground: 'rgba(255, 255, 255, 0.25)',\n      activeBackground: 'rgba(255, 255, 255, 0.2)',\n      border: 'rgba(255, 255, 255, 0.30)',\n      text: '#FFFFFF',\n      icon: '#FFFFFF',\n      blur: '8px',\n      blurHover: '12px',\n    }\n  },\n  overlay: {\n    light: 'rgba(255, 255, 255, 0.1)',\n    medium: 'rgba(0, 0, 0, 0.3)',\n    dark: 'rgba(0, 0, 0, 0.5)',\n  },\n  ripple: {\n    light: { opacity: 0.4 },\n    dark: { opacity: 0.3 }\n  },\n  hoverLift: {\n    transform: 'translateY(-2px)',\n    transition: {\n      properties: ['background-color', 'transform', 'box-shadow'],\n      duration: 'shorter',\n      easing: 'easeInOut'\n    }\n  }\n};\n\nexport default effects;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip, useTheme } from '@mui/material';\nimport effects from '../../theme/effects';\n\n/**\n * SkillTagList Component\n * \n * Standardized tag component for displaying skills/technologies\n * Used across the portfolio for consistent styling\n * Now with glassmorphic styling\n */\nconst SkillTagList = ({ label, size = \"medium\", onClick, variant = \"outlined\", color = \"default\", sx = {}, ...props }) => {\n  const theme = useTheme();\n  \n  // Use MUI default styling for primary color, glassmorphic for others\n  const isPrimary = color === 'primary' && variant === 'filled';\n  const isDark = theme.palette.mode === 'dark';\n  \n  const baseStyles = {\n    mx: 0.5,\n    my: 0.5,\n    borderRadius: theme.shape?.radius?.pill || 999,\n    fontWeight: 500,\n    transition: theme.transitions.create(['background-color', 'transform'], {\n      duration: theme.transitions.duration.shorter,\n    }),\n    '& .MuiChip-icon': {\n      marginRight: '8px',\n      marginLeft: '-4px',\n    },\n    '&:hover': {\n      transform: onClick ? 'scale(1.05)' : 'none',\n    },\n  };\n  \n  // Glassmorphic styling for chips\n  // In light theme, always apply glass (black glass with light copy)\n  // In dark theme, apply glass to non-primary chips only\n  const chipGlassTokens = isDark ? effects.chipGlass.dark : effects.chipGlass.light;\n  const applyGlass = !isDark || !isPrimary;\n  const glassmorphicStyles = applyGlass ? {\n    background: chipGlassTokens.background,\n    backdropFilter: `blur(${chipGlassTokens.blur})`,\n    WebkitBackdropFilter: `blur(${chipGlassTokens.blur})`,\n    border: `1px solid ${chipGlassTokens.border}`,\n    color: `${chipGlassTokens.text} !important`,\n    // Force all nested content to adopt the glass foreground\n    '& *': {\n      color: `${chipGlassTokens.text} !important`,\n    },\n    '&& .MuiChip-label': {\n      color: `${chipGlassTokens.text} !important`,\n    },\n    '&& .MuiChip-icon': {\n      color: `${chipGlassTokens.icon} !important`,\n      // Ensure nested SvgIcon adopts the light color\n      '& .MuiSvgIcon-root': {\n        color: `${chipGlassTokens.icon} !important`,\n        fill: `${chipGlassTokens.icon} !important`,\n      },\n      '& svg': {\n        color: `${chipGlassTokens.icon} !important`,\n        fill: `${chipGlassTokens.icon} !important`,\n      },\n      '& path, & circle, & rect, & polygon, & line, & polyline': {\n        fill: `${chipGlassTokens.icon} !important`,\n        stroke: `${chipGlassTokens.icon} !important`,\n      },\n    },\n    '&& .MuiChip-deleteIcon': {\n      color: `${chipGlassTokens.icon} !important`,\n    },\n    '&:hover': {\n      background: chipGlassTokens.hoverBackground,\n      backdropFilter: `blur(${chipGlassTokens.blurHover})`,\n      WebkitBackdropFilter: `blur(${chipGlassTokens.blurHover})`,\n    },\n    '&:active': {\n      background: chipGlassTokens.activeBackground,\n    },\n  } : {};\n  \n  return (\n    <Chip\n      label={label}\n      size={size}\n      onClick={onClick}\n      variant={variant}\n      color={color}\n      sx={{\n        ...baseStyles,\n        ...glassmorphicStyles,\n        ...sx\n      }}\n      {...props}\n    />\n  );\n};\n\nSkillTagList.propTypes = {\n  label: PropTypes.string.isRequired,\n  size: PropTypes.oneOf([\"small\", \"medium\"]),\n  onClick: PropTypes.func,\n  variant: PropTypes.oneOf([\"filled\", \"outlined\", \"category\", \"skill\"]),\n  color: PropTypes.oneOf([\"default\", \"primary\", \"secondary\", \"error\", \"info\", \"success\", \"warning\"]),\n  sx: PropTypes.object,\n};\n\nexport default SkillTagList;\n","/**\n * Skills data for the Hero component\n */\n\n// First row of skills (primary)\nexport const skillsRow1 = ['UX Research & UI Design', 'Interaction Design'];\n\n// Second row of skills (secondary)\nexport const skillsRow2 = ['Haptic Prototyping', 'Sound Design', 'AI Integration', 'Frontend Development'];\n\n// All skills combined \nexport const allSkills = [...skillsRow1, ...skillsRow2];\n","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { Box, Typography, useMediaQuery, useTheme } from '@mui/material';\nimport { skillsRow1, skillsRow2 } from './skillsData';\nimport SkillTagList from '../common/SkillTagList';\nimport { getSpacingPreset, getTypographyPreset } from '../../theme/presets';\n\n/**\n * HeroContent Component\n * \n * Displays the main hero content including:\n * - Main title\n * - Subtitle\n * - Status text\n * - Skill tags\n * \n * This component is set with pointerEvents: 'none' to allow\n * clicks to pass through to the 3D background\n */\nconst HeroContent = () => {\n  const theme = useTheme();\n  \n  // Animation variants for staggered appearance\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.3,\n        duration: 0.8\n      }\n    }\n  };\n\n  const itemVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: { \n      opacity: 1, \n      y: 0,\n      transition: { duration: 0.6, ease: \"easeOut\" }\n    }\n  };\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const heroPadding = getSpacingPreset('pageHorizontal');\n  const heroTitlePreset = getTypographyPreset(theme, 'heroTitle');\n  const heroSubtitlePreset = getTypographyPreset(theme, 'heroSubtitle');\n  const heroBodyPreset = getTypographyPreset(theme, 'bodyLong');\n\n  return (\n    <Box\n      sx={{\n        position: 'relative',\n        width: '100%',\n        maxWidth: '100%',\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        zIndex: 10,\n        pointerEvents: 'none', // All content is non-interactive by default\n        userSelect: 'none',\n        px: heroPadding.px,\n      }}\n    >\n      <motion.div\n        initial=\"hidden\"\n        animate=\"visible\"\n        variants={containerVariants}\n        style={{\n          maxWidth: 'min(100%, 650px)',\n          textAlign: isMobile ? 'center' : 'left',\n          pointerEvents: 'none',\n        }}\n      >\n        {/* Main Title */}\n        <motion.div variants={itemVariants}>\n          <Typography\n            variant={heroTitlePreset.variant}\n            component={heroTitlePreset.component}\n            sx={{\n              ...heroTitlePreset.sx,\n              mb: 1,\n              color: theme.palette.text.primary,\n            }}\n          >\n            Vincent Göke\n          </Typography>\n        </motion.div>\n\n        {/* Subtitle */}\n        <motion.div variants={itemVariants}>\n          <Typography\n            variant={heroSubtitlePreset.variant}\n            component={heroSubtitlePreset.component}\n            sx={{\n              ...heroSubtitlePreset.sx,\n              mb: 4,\n            }}\n          >\n            Creative Technologist & Interaction Designer\n          </Typography>\n        </motion.div>\n        \n        {/* Status Text */}\n        <motion.div variants={itemVariants}>\n          <Typography \n            variant={heroBodyPreset.variant}\n            component={heroBodyPreset.component}\n            sx={{ \n              ...heroBodyPreset.sx,\n              mb: 2,\n              color: theme.palette.text.secondary,\n            }}\n          >\n            Fulltime/ Internship | Junior/ Midlevel | On-Site/ Hybrid/ Remote\n          </Typography>\n        </motion.div>\n        \n        {/* Skill Tags */}\n        <Box \n          component={motion.div} \n          variants={itemVariants} \n          sx={{ pointerEvents: 'none' }}\n        >\n          <Box \n            sx={{ \n              display: 'flex', \n              flexWrap: 'wrap',\n              gap: 1,\n              mb: 1.5,\n              justifyContent: isMobile ? 'center' : 'flex-start',\n            }}\n          >\n            {skillsRow1.map((skill, index) => (\n              <SkillTagList\n                key={index}\n                label={skill}\n                size=\"medium\"\n                variant=\"filled\"\n                sx={{ pointerEvents: 'none' }}\n              />\n            ))}\n          </Box>\n          <Box \n            sx={{ \n              display: 'flex', \n              flexWrap: 'wrap',\n              gap: 1,\n              justifyContent: isMobile ? 'center' : 'flex-start',\n            }}\n          >\n            {skillsRow2.map((skill, index) => (\n              <SkillTagList\n                key={index}\n                label={skill}\n                size=\"medium\"\n                variant=\"filled\"\n                sx={{ pointerEvents: 'none' }}\n              />\n            ))}\n          </Box>\n        </Box>\n      </motion.div>\n    </Box>\n  );\n};\n\nexport default HeroContent;\n","/**\n * Utility functions for scrolling behavior in the application\n */\n\n/**\n * Scrolls to a specific section on the page by ID\n * with smooth scrolling behavior\n * \n * @param {string} sectionId - The ID of the section to scroll to\n * @param {Object} options - Optional scroll configuration\n * @param {number} options.offset - Offset from the top in pixels\n */\nexport const scrollToSection = (sectionId, options = {}) => {\n  // Default options\n  const { offset = -70 } = options;\n  // Remove unused duration parameter\n  \n  try {\n    const targetElement = document.getElementById(sectionId);\n    if (!targetElement) {\n      console.warn(`Section with ID \"${sectionId}\" not found`);\n      return;\n    }\n    \n    const targetPosition = targetElement.getBoundingClientRect().top + window.pageYOffset + offset;\n    \n    // Use scrollTo with behavior: smooth for modern browsers\n    window.scrollTo({\n      top: targetPosition,\n      behavior: 'smooth'\n    });\n    \n    // Track scroll events in analytics if available\n    if (window.gtag) {\n      window.gtag('event', 'scroll_to_section', {\n        section_id: sectionId\n      });\n    }\n  } catch (error) {\n    console.error('Error scrolling to section:', error);\n  }\n};\n\n/**\n * Checks if an element is in the viewport\n * \n * @param {HTMLElement} element - The element to check\n * @param {number} offset - Optional offset to consider\n * @returns {boolean} - Whether the element is in viewport\n */\nexport const isInViewport = (element, offset = 0) => {\n  if (!element) return false;\n  \n  const rect = element.getBoundingClientRect();\n  return (\n    rect.top + offset < window.innerHeight && \n    rect.bottom > 0\n  );\n};\n\n// Fix anonymous default export\nconst scrollUtils = {\n  scrollToSection,\n  isInViewport\n};\n\nexport default scrollUtils;\n","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { Box, Typography, useTheme } from '@mui/material';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport { scrollToSection } from '../../utils/scrollUtils';\n\n/**\n * ScrollIndicator Component\n * \n * Renders a \"Scroll to explore\" text with animated down arrow\n * Positioned at the bottom center of the hero section\n */\nconst ScrollIndicator = () => {\n  const theme = useTheme();\n  \n  // Handle click to scroll to work section\n  const handleClick = () => {\n    scrollToSection('work');\n  };\n  \n  return (\n    <Box\n      sx={{\n        position: 'absolute',\n        bottom: theme.spacing(6),\n        left: 0,\n        right: 0,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        cursor: 'pointer',\n        zIndex: 10,\n        pointerEvents: 'auto', // Explicitly enable pointer events for this component\n      }}\n      onClick={handleClick}\n      role=\"button\"\n      aria-label=\"Scroll to explore content\"\n      tabIndex={0}\n      onKeyDown={(e) => {\n        if (e.key === 'Enter') handleClick();\n      }}\n    >\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ delay: 1.5, duration: 0.8 }}\n        whileHover={{ scale: 1.05 }}\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          padding: theme.spacing(1),\n        }}\n      >\n        <Typography \n          variant=\"caption\" \n          sx={{ \n            mb: 1, \n            color: theme.palette.text.secondary,\n            opacity: 0.8,\n            fontWeight: theme.typography.fontWeightRegular,\n          }}\n        >\n          Scroll to explore\n        </Typography>\n        \n        <motion.div\n          animate={{\n            y: [0, 10, 0],\n            opacity: [0.6, 1, 0.6],\n          }}\n          transition={{\n            duration: 2,\n            repeat: Infinity,\n            repeatType: 'loop',\n          }}\n        >\n          <ArrowDownwardIcon \n            color=\"primary\" \n            fontSize=\"small\"\n          />\n        </motion.div>\n      </motion.div>\n    </Box>\n  );\n};\n\nexport default ScrollIndicator;\n","import React from 'react';\nimport { Box, IconButton, Tooltip, useTheme } from '@mui/material';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport { motion } from 'framer-motion';\nimport { scrollToSection } from '../../utils/scrollUtils';\n\n/**\n * MobileScrollHelper Component\n * \n * Provides a prominent scroll helper for mobile devices to navigate away from the hero section\n * when the 3D canvas prevents normal scrolling gestures\n */\nconst MobileScrollHelper = () => {\n  const theme = useTheme();\n  \n  const handleScrollDown = () => {\n    scrollToSection('about');\n  };\n  \n  return (\n    <Box\n      sx={{\n        position: 'fixed',\n        bottom: theme.spacing(3),\n        right: theme.spacing(3),\n        zIndex: theme.zIndex.fab,\n        display: { xs: 'block', sm: 'none' }, // Mobile only\n      }}\n    >\n      <Tooltip title=\"Scroll down\" placement=\"left\">\n        <motion.div\n          initial={{ opacity: 0, scale: 0.8 }}\n          animate={{ opacity: 1, scale: 1 }}\n          transition={{ delay: 2, duration: 0.5 }}\n          whileHover={{ scale: 1.1 }}\n          whileTap={{ scale: 0.95 }}\n        >\n          <IconButton\n            onClick={handleScrollDown}\n            sx={{\n              backgroundColor: theme.palette.primary.main,\n              color: theme.palette.primary.contrastText,\n              width: 56,\n              height: 56,\n              boxShadow: theme.shadows[6],\n              '&:hover': {\n                backgroundColor: theme.palette.primary.dark,\n                boxShadow: theme.shadows[12],\n              },\n              '&:active': {\n                transform: 'scale(0.95)',\n              },\n            }}\n            aria-label=\"Scroll down to next section\"\n          >\n            <motion.div\n              animate={{\n                y: [0, 4, 0],\n              }}\n              transition={{\n                duration: 1.5,\n                repeat: Infinity,\n                repeatType: 'loop',\n              }}\n            >\n              <KeyboardArrowDownIcon fontSize=\"large\" />\n            </motion.div>\n          </IconButton>\n        </motion.div>\n      </Tooltip>\n    </Box>\n  );\n};\n\nexport default MobileScrollHelper;\n","/**\n * Constants and configuration settings for the 3D background scene\n */\n\n// Shape type identifiers\nexport const SHAPE_TYPES = {\n  SPHERE: 0,\n  CUBE: 1,   // Cube scene with interactive grid\n  TORUS: 2\n};\n\n// Canvas settings for @react-three/fiber\nexport const CANVAS_SETTINGS = {\n  camera: {\n    position: [0, 0, 16], // Increased from 12 to 16 for a more zoomed-out starting view\n    fov: 45,\n    near: 0.1,\n    far: 1000\n  },\n  gl: {\n    antialias: true,\n    alpha: true,\n    powerPreference: 'high-performance',\n    preserveDrawingBuffer: true\n  }\n};\n\n// Performance settings for different device capabilities\nexport const PERFORMANCE_MODES = {\n  low: {\n    particleCount: 50,\n    segmentCount: 12,\n    dpr: 1\n  },\n  medium: {\n    particleCount: 150,\n    segmentCount: 32,\n    dpr: 1\n  },\n  high: {\n    particleCount: 300,\n    segmentCount: 64,\n    dpr: window.devicePixelRatio || 1\n  }\n};\n\n// Animation timing constants\nexport const ANIMATION = {\n  transitionDuration: 600, // ms\n  hoverTransitionDuration: 300, // ms\n  autoRotateDelay: 3000, // ms\n  autoRotateSpeed: 0.5\n};\n\n// Scene element dimensions\nexport const DIMENSIONS = {\n  sphere: {\n    radius: 1.5,\n    segments: 64\n  },\n  cube: {\n    size: 2,\n    segments: 2\n  },\n  torus: {\n    radius: 1.5,\n    tube: 0.4,\n    radialSegments: 16,\n    tubularSegments: 64\n  },\n  clickDetection: {\n    radius: 6 // Radius of invisible sphere for better click detection\n  }\n};\n\n// Scene element materials properties\nexport const MATERIALS = {\n  metalness: 0.7,\n  roughness: 0.2,\n  emissiveIntensity: 0.3,\n  hoverEmissiveIntensity: 0.6\n};\n\n// Limits for the number of shapes in each scene type\nexport const SHAPE_LIMITS = {\n  SPHERE: {\n    mobile: 25,  // Fewer shapes on mobile for better performance\n    desktop: 50  // More shapes on desktop for richer visuals\n  },\n  CUBE: {\n    mobile: 20,\n    desktop: 40\n  },\n  TORUS: {\n    mobile: 20,\n    desktop: 40\n  }\n};\n\n// Create a named object for default export\nconst constants = {\n  SHAPE_TYPES,\n  CANVAS_SETTINGS,\n  PERFORMANCE_MODES,\n  ANIMATION,\n  DIMENSIONS,\n  MATERIALS,\n  SHAPE_LIMITS\n};\n\nexport default constants;\n","import React, { createContext, useContext, useState, useCallback, useRef } from 'react';\nimport { SHAPE_TYPES } from './constants';\n\n// Create context with default values\nconst SceneContext = createContext({\n  currentShapeType: SHAPE_TYPES.SPHERE,\n  switchShapeType: () => {},\n  isTransitioning: false,\n  showParticles: true,\n  toggleParticles: () => {},\n  mousePosition: { x: 0, y: 0 },\n  updateMousePosition: () => {},\n  isDragging: false,\n  updateDragging: () => {},\n  isInteractionEnabled: true,\n  setInteractionEnabled: () => {},\n  hasInteraction: false\n});\n\n/**\n * SceneProvider Component\n */\nexport const SceneProvider = ({ children }) => {\n  // Scene state\n  const [currentShapeType, setCurrentShapeType] = useState(SHAPE_TYPES.SPHERE);\n  const [isTransitioning, setIsTransitioning] = useState(false);\n  const [showParticles, setShowParticles] = useState(true);\n  \n  // Interaction state\n  const [isDragging, setIsDragging] = useState(false);\n  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\n  const [isInteractionEnabled, setIsInteractionEnabled] = useState(true);\n  const [hasInteraction, setHasInteraction] = useState(false);\n  \n  // Track last mouse activity time\n  const lastInteractionTime = useRef(Date.now());\n  const interactionTimeout = useRef(null);\n  \n  // Toggle particles\n  const toggleParticles = useCallback(() => {\n    setShowParticles(prev => !prev);\n  }, []);\n  \n  // Function to switch between scene types with smooth transition\n  const switchShapeType = useCallback(() => {\n    // Don't switch during transition or if interaction is disabled\n    if (isTransitioning || !isInteractionEnabled) {\n      return;\n    }\n    setIsTransitioning(true);\n    \n    // First timeout lets the current scene animate out before we swap buffers\n    setTimeout(() => {\n      const newType = (currentShapeType + 1) % 3;\n      setCurrentShapeType(newType);\n      \n      // Second timeout hands control back once the new scene animates in\n      setTimeout(() => {\n        setIsTransitioning(false);\n      }, 400); // Duration based on transition animation\n    }, 200);\n  }, [isTransitioning, currentShapeType, isInteractionEnabled]);\n\n  // Update mouse position for interactive elements\n  const updateMousePosition = useCallback((position) => {\n    if (position && typeof position.x === 'number' && typeof position.y === 'number') {\n      setMousePosition(position);\n      \n      // Update interaction state\n      setHasInteraction(true);\n      lastInteractionTime.current = Date.now();\n      \n      // Clear any existing timeout\n      if (interactionTimeout.current) {\n        clearTimeout(interactionTimeout.current);\n      }\n      \n      // Set timeout to detect when interaction stops\n      interactionTimeout.current = setTimeout(() => {\n        setHasInteraction(false);\n      }, 2000);\n    }\n  }, []);\n  \n  // Clean up on unmount\n  React.useEffect(() => {\n    return () => {\n      if (interactionTimeout.current) {\n        clearTimeout(interactionTimeout.current);\n      }\n    };\n  }, []);\n  \n  // Update dragging state\n  const updateDragging = useCallback((dragging) => {\n    setIsDragging(dragging);\n    \n    // Also consider this as interaction\n    if (dragging) {\n      setHasInteraction(true);\n      lastInteractionTime.current = Date.now();\n    }\n  }, []);\n  \n  // Toggle interaction enabled state\n  const setInteractionEnabled = useCallback((enabled) => {\n    setIsInteractionEnabled(enabled);\n  }, []);\n\n  return (\n    <SceneContext.Provider value={{ \n      currentShapeType, \n      switchShapeType, \n      isTransitioning,\n      showParticles,\n      toggleParticles,\n      mousePosition,\n      updateMousePosition,\n      isDragging,\n      updateDragging,\n      isInteractionEnabled,\n      setInteractionEnabled,\n      hasInteraction\n    }}>\n      {children}\n    </SceneContext.Provider>\n  );\n};\n\n// Custom hook to use the scene context\nexport const useSceneState = () => {\n  const context = useContext(SceneContext);\n  if (!context) {\n    throw new Error('useSceneState must be used within a SceneProvider');\n  }\n  return context;\n};\n\nexport default SceneContext;\n","import * as THREE from 'three';\nimport { SHAPE_TYPES } from '../constants';\n\n/**\n * Converts a hex color string to HSL color object\n * @param {string} hex - Hex color string\n * @returns {Object} HSL color object with h, s, l properties\n */\nexport const hexToHSL = (hex) => {\n  // Remove the # if present\n  hex = hex.replace('#', '');\n  \n  // Convert hex to RGB\n  const r = parseInt(hex.substr(0, 2), 16) / 255;\n  const g = parseInt(hex.substr(2, 2), 16) / 255;\n  const b = parseInt(hex.substr(4, 2), 16) / 255;\n  \n  // Find max and min values to calculate lightness\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  \n  let h, s;\n  \n  if (max === min) {\n    h = s = 0; // achromatic\n  } else {\n    const d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    \n    switch (max) {\n      case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n      case g: h = (b - r) / d + 2; break;\n      case b: h = (r - g) / d + 4; break;\n      default: h = 0;\n    }\n    \n    h /= 6;\n  }\n  \n  return { h, s, l };\n};\n\n/**\n * Create a dynamic color based on theme, time, and energy level\n * @param {Object} theme - MUI theme object\n * @param {number} time - Current elapsed time\n * @param {number} energy - Energy/excitement level (0-1)\n * @param {number} sceneType - Type of scene (from SHAPE_TYPES)\n * @param {boolean} isHovered - Whether the object is hovered\n * @returns {Object} - Color object with main, emissive, and emissiveIntensity\n */\nexport const getDynamicColor = (theme, time, energy = 0, sceneType = SHAPE_TYPES.SPHERE, isHovered = false) => {\n  // Extract base colors from theme\n  const colors = extractThemeColors(theme).shapeColors;\n  \n  // Get base color for this shape type\n  const baseColor = colors[sceneType] || colors[SHAPE_TYPES.SPHERE];\n  const hoverColor = colors.hover;\n  \n  // Calculate hue shift based on time and energy\n  const timeShift = (time * 0.05) % 1.0;\n  const energyBoost = Math.min(1, energy * 1.2);\n  \n  // Calculate final color values with time and energy influences\n  let hue, saturation, lightness;\n  \n  if (isHovered) {\n    // Use hover color directly when hovered\n    hue = hoverColor.h;\n    saturation = hoverColor.s + (energy * 0.2);\n    lightness = hoverColor.l + (energy * 0.1);\n  } else {\n    // Shift colors based on energy level\n    const hueShift = energy * 0.2 * Math.sin(time * 2);\n    hue = (baseColor.h + hueShift + (energy * timeShift * 0.3)) % 1.0;\n    saturation = THREE.MathUtils.lerp(baseColor.s, 0.9, energy * 0.7);\n    lightness = THREE.MathUtils.lerp(baseColor.l, 0.6, energy * 0.5);\n  }\n  \n  // Create THREE.Color objects for both main color and emissive\n  const mainColor = new THREE.Color().setHSL(hue, saturation, lightness);\n  \n  // Emissive color is slightly shifted and brighter\n  const emissiveHue = (hue + 0.1) % 1.0;\n  const emissiveColor = new THREE.Color().setHSL(\n    emissiveHue, \n    Math.min(1, saturation + 0.1), \n    Math.min(0.8, lightness + 0.2)\n  );\n  \n  // Calculate emissive intensity based on energy\n  const emissiveIntensity = energyBoost * 0.8;\n  \n  return {\n    main: mainColor,\n    emissive: emissiveColor,\n    emissiveIntensity: emissiveIntensity\n  };\n};\n\n/**\n * Extract theme colors for Three.js scenes\n */\nexport const extractThemeColors = (theme) => {\n  if (!theme || !theme.palette) {\n    // Provide fallback colors if theme isn't available\n    return {\n      shapeColors: {\n        0: { h: 0.6, s: 0.6, l: 0.6 }, // Blue-ish\n        1: { h: 0.3, s: 0.6, l: 0.6 }, // Green-ish\n        2: { h: 0.1, s: 0.6, l: 0.6 }, // Orange-ish\n        hover: { h: 0.5, s: 0.8, l: 0.7 }\n      },\n      sceneColors: {\n        cubeGrid: {\n          primary: new THREE.Color('#5363EE'),\n          secondary: new THREE.Color('#C2F750'),\n          accent: new THREE.Color('#29b6f6')\n        },\n        torus: {\n          primary: '#5363EE',\n          secondary: '#C2F750',\n          trail: '#C2F750'\n        }\n      }\n    };\n  }\n\n  // First try to use dedicated scene3d colors if available in the theme\n  let primaryColor, secondaryColor, infoColor;\n  \n  if (theme.palette.scene3d) {\n    primaryColor = theme.palette.scene3d.sphere || theme.palette.primary?.main;\n    secondaryColor = theme.palette.scene3d.box || theme.palette.secondary?.main;\n    infoColor = theme.palette.scene3d.torus || theme.palette.info?.main;\n  } else {\n    // Fallback to standard theme colors\n    primaryColor = theme.palette.primary?.main;\n    secondaryColor = theme.palette.secondary?.main;\n    infoColor = theme.palette.info?.main;\n  }\n  \n  // Extract colors from theme, using fallbacks if needed\n  const primary = hexToHSL(primaryColor || '#5363EE');\n  const secondary = hexToHSL(secondaryColor || '#C2F750');\n  const info = hexToHSL(infoColor || '#29b6f6');\n  \n  // Base scene color mapping\n  const shapeColors = {\n    [SHAPE_TYPES.SPHERE]: primary,\n    [SHAPE_TYPES.BOX]: secondary,\n    [SHAPE_TYPES.TORUS]: info,\n    hover: hexToHSL(theme.palette.secondary?.light || '#D4FF69'),\n  };\n  \n  // Additional colors for other scenes\n  const sceneColors = {\n    cubeGrid: {\n      primary: new THREE.Color(theme.palette.primary?.main || '#5363EE'),\n      secondary: new THREE.Color(theme.palette.secondary?.main || '#C2F750'),\n      accent: new THREE.Color(theme.palette.info?.main || '#29b6f6'),\n    },\n    torus: {\n      primary: theme.palette.primary?.main || '#5363EE',\n      secondary: theme.palette.secondary?.main || '#C2F750',\n      trail: theme.palette.secondary?.main || '#C2F750'\n    }\n  };\n  \n  return { shapeColors, sceneColors };\n};\n\n// Add direct alias for backward compatibility\nexport const extractColorsFromTheme = extractThemeColors;\n\n/**\n * Convert MUI theme color to THREE.js color\n */\nexport const themeColorToThreeColor = (colorString) => {\n  return new THREE.Color(colorString);\n};\n\n// Get environment settings based on theme\nexport const getEnvironmentSettings = (theme) => {\n  const isDark = theme.palette.mode === 'dark';\n  \n  return {\n    fogColor: isDark ? 0x0a1022 : 0xf0f4f8,\n    fogDensity: isDark ? 0.02 : 0.01,\n    ambientLight: {\n      color: isDark ? 0x333344 : 0xffffff,\n      intensity: isDark ? 0.7 : 0.5\n    },\n    directionalLight: {\n      color: isDark ? 0xaabbff : 0xffffff,\n      intensity: isDark ? 0.8 : 1.0\n    },\n    backgroundColor: isDark ? 0x0a1022 : 0xf0f4f8\n  };\n};\n","/**\n * ObjectPool\n * \n * A utility for reusing Three.js objects to improve performance\n * and reduce garbage collection pauses\n */\n\nclass ObjectPool {\n  constructor(factory, initialSize = 50) {\n    this.factory = factory;\n    this.pool = [];\n    this.activeObjects = new Set();\n    \n    // Pre-populate the pool\n    this.expand(initialSize);\n  }\n  \n  // Get an object from the pool or create a new one\n  get() {\n    let object;\n    \n    if (this.pool.length > 0) {\n      object = this.pool.pop();\n    } else {\n      object = this.factory();\n    }\n    \n    this.activeObjects.add(object);\n    return object;\n  }\n  \n  // Return an object to the pool\n  release(object) {\n    if (this.activeObjects.has(object)) {\n      this.activeObjects.delete(object);\n      this.pool.push(object);\n    }\n  }\n  \n  // Add more objects to the pool\n  expand(count) {\n    for (let i = 0; i < count; i++) {\n      this.pool.push(this.factory());\n    }\n  }\n  \n  // Clear the pool\n  clear() {\n    this.pool = [];\n    this.activeObjects.clear();\n  }\n  \n  // Get the number of objects in the pool\n  get size() {\n    return this.pool.length;\n  }\n  \n  // Get the number of active objects\n  get activeCount() {\n    return this.activeObjects.size;\n  }\n  \n  // Get total objects (active + pooled)\n  get totalCount() {\n    return this.pool.length + this.activeObjects.size;\n  }\n}\n\nexport default ObjectPool;\n","import React, { useState, useEffect, useRef, useMemo, useCallback } from 'react';\nimport { useTheme, useMediaQuery } from '@mui/material';\nimport { useFrame } from '@react-three/fiber';\nimport * as THREE from 'three';\nimport { SHAPE_LIMITS, SHAPE_TYPES } from '../constants';\nimport { useSceneState } from '../SceneContext';\nimport ObjectPool from '../utils/ObjectPool';\nimport { getDynamicColor, themeColorToThreeColor } from '../utils/sceneThemeUtils';\n\n/**\n * SphereScene Component - Enhanced with camera-aware mouse following\n */\nconst SphereScene = ({ \n  color = new THREE.Color(), // Will be overridden by theme-derived colors\n  isTransitioning, \n  easterEggActive = false,\n  interactionCount = 0,\n  theme: propTheme\n}) => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const { isInteractionEnabled } = useSceneState();\n  \n  // Mouse cursor tracking using pointer events\n  const [cursorWorldPosition, setCursorWorldPosition] = useState({ x: 0, y: 0, z: 0 });\n  \n  // Set up pools of shapes for reuse\n  const [shapesPool] = useState(() => \n    new ObjectPool(() => ({ \n      position: new THREE.Vector3(), \n      velocity: new THREE.Vector3(),\n      rotation: new THREE.Euler(),\n      scale: new THREE.Vector3(1, 1, 1),\n      type: SHAPE_TYPES.SPHERE,\n      hovered: false,\n      excitementLevel: 0,\n      ref: React.createRef(),\n      matrixAutoUpdate: false,\n      // Auto-movement properties\n      autoMovement: {\n        speed: Math.random() * 0.005 + 0.001,\n        direction: new THREE.Vector3(\n          Math.random() * 2 - 1,\n          Math.random() * 2 - 1,\n          Math.random() * 2 - 1\n        ).normalize(),\n        rotationSpeed: {\n          x: Math.random() * 0.005,\n          y: Math.random() * 0.005,\n          z: Math.random() * 0.005\n        },\n        timeOffset: Math.random() * 1000\n      },\n      // Tracking last position for velocity smoothing\n      lastPosition: new THREE.Vector3()\n    }), isMobile ? SHAPE_LIMITS.SPHERE.mobile : SHAPE_LIMITS.SPHERE.desktop)\n  );\n  \n  // Store active shapes\n  const [activeShapes, setActiveShapes] = useState([]);\n  \n  // Track if the cursor has moved recently\n  const hasMouseMoved = useRef(false);\n  const lastMouseMoveTime = useRef(0);\n  \n  // Use a bias vector to maintain a direction of movement\n  const movementBias = useRef(new THREE.Vector3());\n  \n  // User's cursor position in 3D space\n  const cursorPosition = useRef(new THREE.Vector3());\n  const prevCursorPosition = useRef(new THREE.Vector3());\n  \n  // Reusable vectors for calculations\n  const tempVector = useRef(new THREE.Vector3());\n  const tempVector2 = useRef(new THREE.Vector3());\n  \n  // Clock for time-based animations\n  const clock = useRef(new THREE.Clock()).current;\n\n  // Get theme colors for each shape\n  const shapeColors = useMemo(() => {\n    // Helper to convert hex to HSL\n    const hexToHSL = (hex) => {\n      hex = hex.replace('#', '');\n      \n      const r = parseInt(hex.substr(0, 2), 16) / 255;\n      const g = parseInt(hex.substr(2, 2), 16) / 255;\n      const b = parseInt(hex.substr(4, 2), 16) / 255;\n      \n      const max = Math.max(r, g, b);\n      const min = Math.min(r, g, b);\n      const l = (max + min) / 2;\n      \n      let h, s;\n      \n      if (max === min) {\n        h = s = 0; // achromatic\n      } else {\n        const d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        \n        switch (max) {\n          case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n          case g: h = (b - r) / d + 2; break;\n          case b: h = (r - g) / d + 4; break;\n          default: h = 0;\n        }\n        \n        h /= 6;\n      }\n      \n      return { h, s, l };\n    };\n    \n    // Extract colors from theme\n    const primary = hexToHSL(theme.palette.primary.main);\n    const secondary = hexToHSL(theme.palette.primary.main);\n    const info = hexToHSL(theme.palette.info?.main || '#29b6f6');\n    \n    return {\n      [SHAPE_TYPES.SPHERE]: primary,\n      [SHAPE_TYPES.BOX]: secondary,\n      [SHAPE_TYPES.TORUS]: info,\n      hover: hexToHSL(theme.palette.primary.light), // Hover state color\n    };\n  }, [theme.palette]);\n\n  // Get theme colors for each shape - Use this directly in the dynamic color logic\n  const getShapeColor = useCallback((shapeType, isHovered = false) => {\n    // Extract the proper color for the shape type from theme\n    const hslColor = isHovered ? \n      shapeColors.hover : \n      shapeColors[shapeType] || shapeColors[SHAPE_TYPES.SPHERE];\n      \n    // Create a new THREE.Color and set HSL values\n    return new THREE.Color().setHSL(\n      hslColor.h,\n      hslColor.s,\n      hslColor.l\n    );\n  }, [shapeColors]);\n  \n  // Initialize the shapes\n  useEffect(() => {\n    const count = isMobile ? SHAPE_LIMITS.SPHERE.mobile : SHAPE_LIMITS.SPHERE.desktop;\n    const nextActiveShapes = [];\n    \n    for (let i = 0; i < count; i++) {\n      const shape = shapesPool.get();\n      if (shape) {\n        // Fixed starting position distribution - keep spheres within visible bounds\n        // Use a smaller, more controlled radius to prevent going out of frame\n        const radius = 2 + Math.random() * 2; // Reduced from 4-7 to 2-4\n        const theta = Math.random() * Math.PI * 2;\n        const phi = Math.acos(2 * Math.random() - 1);\n        \n        // Calculate position with bounds checking\n        const x = radius * Math.sin(phi) * Math.cos(theta);\n        const y = radius * Math.sin(phi) * Math.sin(theta);\n        const z = radius * Math.cos(phi);\n        \n        // Clamp positions to ensure they stay within reasonable bounds\n        shape.position.set(\n          Math.max(-6, Math.min(6, x)), // Clamp X between -6 and 6\n          Math.max(-4, Math.min(4, y)), // Clamp Y between -4 and 4\n          Math.max(-6, Math.min(6, z))  // Clamp Z between -6 and 6\n        );\n        \n        // Smaller initial velocity to prevent immediate drift\n        shape.velocity.set(\n          THREE.MathUtils.randFloat(-0.001, 0.001),\n          THREE.MathUtils.randFloat(-0.001, 0.001),\n          THREE.MathUtils.randFloat(-0.001, 0.001)\n        );\n        \n        // Save initial position for reference\n        shape.lastPosition.copy(shape.position);\n        \n        // Random rotation\n        shape.rotation.set(\n          THREE.MathUtils.randFloat(0, Math.PI * 2),\n          THREE.MathUtils.randFloat(0, Math.PI * 2),\n          THREE.MathUtils.randFloat(0, Math.PI * 2)\n        );\n        \n        shape.type = SHAPE_TYPES.SPHERE;\n        shape.hovered = false;\n        shape.excitementLevel = 0;\n        shape.scale.set(1, 1, 1);\n        \n        // Reset auto-movement properties with more controlled parameters\n        shape.autoMovement = {\n          speed: Math.random() * 0.002 + 0.0005, // Reduced speed\n          direction: new THREE.Vector3(\n            Math.random() * 2 - 1,\n            Math.random() * 2 - 1,\n            Math.random() * 2 - 1\n          ).normalize(),\n          rotationSpeed: {\n            x: Math.random() * 0.003, // Reduced rotation speed\n            y: Math.random() * 0.003,\n            z: Math.random() * 0.003\n          },\n          timeOffset: Math.random() * 1000\n        };\n        \n        nextActiveShapes.push(shape);\n      }\n    }\n    \n    setActiveShapes(nextActiveShapes);\n    \n    return () => {\n      nextActiveShapes.forEach(shape => {\n        shapesPool.release(shape);\n      });\n    };\n  }, [isMobile, shapesPool]);\n  \n  \n  // Update cursor position from pointer events\n  useEffect(() => {\n    // Store previous position before updating\n    prevCursorPosition.current.copy(cursorPosition.current);\n    \n    // Use cursor world position from pointer events\n    cursorPosition.current.set(\n      cursorWorldPosition.x,\n      cursorWorldPosition.y,\n      cursorWorldPosition.z\n    );\n    \n    hasMouseMoved.current = true;\n    lastMouseMoveTime.current = Date.now() * 0.001; // Convert to seconds\n  }, [cursorWorldPosition]);\n  \n  // Add cursor direction tracking for color mapping\n  const cursorDirection = useRef({ angle: 0, hue: 0 });\n  const prevCursorWorldPos = useRef(new THREE.Vector3());\n  \n  // Update cursor direction for hue mapping\n  const updateCursorDirection = useCallback((currentPos) => {\n    if (!currentPos) return;\n    \n    // Calculate direction vector (dx, dy)\n    const dx = currentPos.x - prevCursorWorldPos.current.x;\n    const dy = currentPos.y - prevCursorWorldPos.current.y;\n    \n    // Only update if there's significant movement\n    if (dx*dx + dy*dy > 0.001) {\n      // Convert direction to angle using atan2\n      const angle = Math.atan2(dy, dx);\n      \n      // Map angle (-π to π) to hue (0 to 1)\n      // Add 0.5 to the normalized value to create more pleasing colors (shift to greens/blues)\n      const hue = ((angle / (Math.PI * 2)) + 0.5) % 1;\n      \n      // Store direction data\n      cursorDirection.current = { angle, hue, intensity: Math.min(1, Math.sqrt(dx*dx + dy*dy) * 3) };\n      \n      // Store position for next frame\n      prevCursorWorldPos.current.copy(currentPos);\n    } else {\n      // Gradually reduce intensity when not moving\n      cursorDirection.current.intensity = Math.max(0, cursorDirection.current.intensity - 0.02);\n    }\n  }, []);\n  \n  // Animation and physics logic with optimizations\n  useFrame(() => {\n    if (isTransitioning) return;\n    \n    const currentTime = clock.getElapsedTime();\n    const timeSinceLastMove = currentTime - lastMouseMoveTime.current;\n    \n    // Update cursor direction for hue mapping\n    updateCursorDirection(cursorPosition.current);\n    \n    // Reset mouse movement flag after 0.5 seconds of no movement\n    if (hasMouseMoved.current && timeSinceLastMove > 0.5) {\n      hasMouseMoved.current = false;\n    }\n    \n    // Fun Mode Special Effects - activate when Easter egg is triggered\n    const funModeActive = easterEggActive;\n    const funModeInfluence = funModeActive ? Math.sin(currentTime * 4) * 0.5 + 0.5 : 0;\n    \n    // Get the directional hue for color syncing\n    const directionHue = cursorDirection.current.hue;\n    const directionIntensity = cursorDirection.current.intensity;\n    \n    // Keep track of spheres that are interacting with cursor for spread calculations\n    const interactingSpheres = [];\n    \n    // First pass: Update basic physics and collect interacting spheres\n    activeShapes.forEach((shape, index) => {\n      // Save last position for later reference\n      shape.lastPosition.copy(shape.position);\n      \n      // AUTOMATIC MOTION: More subtle when cursor is active\n      const autoMove = shape.autoMovement;\n      const autoInfluence = hasMouseMoved.current ? 0.3 : 1.0; // Reduce auto-motion when cursor is active\n      \n      // Enhanced fun mode behaviors - now properly using funModeInfluence\n      if (funModeActive) {\n        // Apply funModeInfluence to create pulsating color and size effects\n        const pulseFrequency = 2.0 + funModeInfluence * 4.0; // Faster pulse with higher influence\n        const pulseAmplitude = 0.4 * (0.5 + funModeInfluence); // Stronger pulse with higher influence\n        const pulsePhase = (index / activeShapes.length) * Math.PI * 2;\n        const pulseFactor = Math.sin(currentTime * pulseFrequency + pulsePhase) * pulseAmplitude + 1.0;\n        \n        // Apply scale pulsing with funModeInfluence for added excitement\n        shape.scale.set(\n          pulseFactor * (1 + funModeInfluence * 0.2),\n          pulseFactor * (1 + funModeInfluence * 0.2),\n          pulseFactor * (1 + funModeInfluence * 0.2)\n        );\n        \n        // Make spheres orbit center with funModeInfluence affecting orbit speed\n        if (shape.excitementLevel > 0.5 || funModeInfluence > 0.7) {\n          const orbitRadius = 4 + funModeInfluence * 2; // Larger orbit with higher influence\n          const orbitSpeed = (0.5 + shape.excitementLevel) * (1 + funModeInfluence);\n          const uniqueOffset = index * 0.628; // Distribute evenly, approx 2π/10\n          \n          // Create swirling orbit motion with funModeInfluence affecting pattern\n          const orbitX = Math.cos(currentTime * orbitSpeed + uniqueOffset) * orbitRadius;\n          const orbitY = Math.sin(currentTime * orbitSpeed + uniqueOffset) * orbitRadius;\n          const orbitZ = Math.cos(currentTime * orbitSpeed * 0.5 + uniqueOffset * funModeInfluence) * orbitRadius;\n          \n          // Apply a force toward the orbit position - stronger with funModeInfluence\n          const orbitForce = new THREE.Vector3(orbitX, orbitY, orbitZ)\n            .sub(shape.position)\n            .multiplyScalar(0.01 * (1 + funModeInfluence));\n            \n          shape.velocity.add(orbitForce);\n          \n          // Add a funModeInfluence-based rotation boost\n          shape.rotation.x += autoMove.rotationSpeed.x * funModeInfluence * 2;\n          shape.rotation.y += autoMove.rotationSpeed.y * funModeInfluence * 2;\n        }\n      } else {\n        // Regular auto-movement when not in fun mode\n        // Time-based influence for more dynamic movement\n        const timeInfluence = Math.sin(currentTime + autoMove.timeOffset) * 0.5 + 0.5;\n        const autoVelocity = tempVector2.current.copy(autoMove.direction)\n          .multiplyScalar(autoMove.speed * timeInfluence * autoInfluence);\n        \n        // Add auto-movement to regular velocity - less when cursor is active\n        tempVector.current.copy(shape.velocity).add(autoVelocity);\n        shape.position.add(tempVector.current);\n      }\n      \n      // Auto-rotation with enhanced speed in fun mode\n      const rotationMultiplier = funModeActive ? 2.5 : 1.2;\n      shape.rotation.x += autoMove.rotationSpeed.x * rotationMultiplier;\n      shape.rotation.y += autoMove.rotationSpeed.y * rotationMultiplier;\n      shape.rotation.z += autoMove.rotationSpeed.z * rotationMultiplier;\n      \n      // Improved boundary system with tighter bounds\n      ['x', 'y', 'z'].forEach(axis => {\n        const limit = axis === 'y' ? 5 : 7; // Tighter Y bounds (5), normal X/Z bounds (7)\n        const position = shape.position[axis];\n        const absPosition = Math.abs(position);\n        \n        // Soft boundary - start pushing back before hitting hard limit\n        if (absPosition > limit - 2) {\n          // Stronger soft force pushing back toward center\n          const pushbackForce = (absPosition - (limit - 2)) * 0.02 * Math.sign(position);\n          shape.velocity[axis] -= pushbackForce;\n          \n          // Hard boundary - bounce with stronger containment\n          if (absPosition > limit) {\n            shape.velocity[axis] *= -0.9; // Stronger bounce\n            shape.position[axis] = limit * Math.sign(position) * 0.9; // Pull further in from edge\n            autoMove.direction[axis] *= -1; // Reverse auto-movement direction\n          }\n        }\n      });\n      \n      // Mouse interaction - NOW USING WORLD COORDINATES\n      if (isInteractionEnabled && !isTransitioning) {\n        // Calculate distance to cursor in world space\n        tempVector.current.copy(shape.position);\n        const distToCursor = tempVector.current.distanceTo(cursorPosition.current);\n        const interactionRadius = 8; // Significantly increased for better coverage\n        \n        if (distToCursor < interactionRadius) {\n          // Track this sphere for spread calculations\n          interactingSpheres.push(shape);\n          \n          // Calculate interaction strength based on distance\n          const strength = 1 - (distToCursor / interactionRadius);\n          \n          // ENHANCED CURSOR FOLLOWING:\n          \n          // 1. Attraction force - stronger when further away\n          const attractionStrength = strength * 0.015; // Increased from 0.005\n          tempVector.current.subVectors(cursorPosition.current, shape.position)\n            .normalize()\n            .multiplyScalar(attractionStrength);\n          \n          shape.velocity.add(tempVector.current);\n          \n          // 2. Add cursor momentum influence for more dynamic following\n          if (hasMouseMoved.current) {\n            // Add a bias in the direction the cursor is moving\n            shape.velocity.add(\n              movementBias.current.clone().multiplyScalar(0.002 * strength)\n            );\n          }\n          \n          // 3. Prevent bunching: Add repulsion when very close to cursor\n          if (distToCursor < 0.8) {\n            // Close to cursor - add repulsive force to prevent bunching\n            const repulsionStrength = (1 - distToCursor / 0.8) * 0.01;\n            tempVector.current.subVectors(shape.position, cursorPosition.current)\n              .normalize()\n              .multiplyScalar(repulsionStrength);\n            \n            shape.velocity.add(tempVector.current);\n          }\n          \n          // Increase excitement level (affects color and glow)\n          shape.excitementLevel = Math.min(1, shape.excitementLevel + 0.025); // Increased from 0.015\n        } else {\n          // Reset when away from cursor - gentler decay\n          shape.excitementLevel = Math.max(0, shape.excitementLevel - 0.008);\n        }\n      } else {\n        // Gradually reduce excitement when no mouse interaction\n        shape.excitementLevel = Math.max(0, shape.excitementLevel - 0.008);\n      }\n      \n      // Update color based on energy and mode\n      if (shape.ref.current && shape.ref.current.material) {\n        // Override with rainbow colors in Easter egg mode\n        if (easterEggActive) {\n          const hue = ((currentTime * 0.2) + (index * 0.01)) % 1.0;\n          shape.ref.current.material.color.setHSL(hue, 0.8, 0.5);\n          shape.ref.current.material.emissive.setHSL(hue, 0.9, 0.3);\n          shape.ref.current.material.emissiveIntensity = 0.5;\n        } else {\n          // Apply theme-derived colors - Now using getShapeColor for base materials when inactive\n          if (shape.excitementLevel < 0.1) {\n            // Use simpler color for inactive states to improve performance\n            shape.ref.current.material.color = getShapeColor(SHAPE_TYPES.SPHERE, shape.hovered);\n            shape.ref.current.material.emissive = getShapeColor(SHAPE_TYPES.SPHERE, false).multiplyScalar(0.2);\n            shape.ref.current.material.emissiveIntensity = 0.1;\n          } else {\n            // Use dynamic colors with directional hue influence for active/excited states\n            const dynamicColors = getDynamicColor(\n              theme,\n              currentTime + (index * 0.05), \n              shape.excitementLevel,\n              SHAPE_TYPES.SPHERE,\n              shape.hovered\n            );\n            \n            // Apply base dynamic colors\n            shape.ref.current.material.color.copy(dynamicColors.main);\n            shape.ref.current.material.emissive.copy(dynamicColors.emissive);\n            shape.ref.current.material.emissiveIntensity = dynamicColors.emissiveIntensity;\n            \n            // Blend in direction-based hue for excited spheres\n            if (directionIntensity > 0.1 && hasMouseMoved.current) {\n              // Create direction-influenced color\n              const dirColor = new THREE.Color().setHSL(\n                directionHue,\n                0.8,\n                0.5 + shape.excitementLevel * 0.2\n              );\n              \n              // Blend between regular color and direction color based on intensity and excitement\n              const blendFactor = directionIntensity * shape.excitementLevel * 0.7;\n              shape.ref.current.material.color.lerp(dirColor, blendFactor);\n              \n              // Also influence emissive color\n              const emissiveDir = new THREE.Color().setHSL(\n                (directionHue + 0.1) % 1.0,\n                0.9,\n                0.4\n              );\n              shape.ref.current.material.emissive.lerp(emissiveDir, blendFactor);\n              \n              // Boost emissive intensity with direction intensity\n              shape.ref.current.material.emissiveIntensity += directionIntensity * 0.3 * shape.excitementLevel;\n            }\n          }\n        }\n        \n        shape.ref.current.material.needsUpdate = true;\n      }\n    });\n    \n    // Second pass: Apply sphere-to-sphere repulsion to prevent bunching\n    // Only do this when there are multiple spheres interacting with cursor\n    if (interactingSpheres.length > 1) {\n      for (let i = 0; i < interactingSpheres.length; i++) {\n        const sphere1 = interactingSpheres[i];\n        \n        for (let j = i + 1; j < interactingSpheres.length; j++) {\n          const sphere2 = interactingSpheres[j];\n          \n          // Calculate distance between spheres\n          tempVector.current.subVectors(sphere1.position, sphere2.position);\n          const distanceSq = tempVector.current.lengthSq();\n          \n          // Apply repulsion if spheres are too close (for better distribution)\n          if (distanceSq < 0.3) {\n            const repulsionForce = 0.002 / Math.max(0.05, distanceSq);\n            const forceVector = tempVector.current.normalize().multiplyScalar(repulsionForce);\n            \n            // Apply opposing forces to both spheres\n            sphere1.velocity.add(forceVector);\n            sphere2.velocity.sub(forceVector);\n          }\n        }\n      }\n    }\n    \n    // Third pass: Final velocity processing and visual updates\n    activeShapes.forEach(shape => {\n      // Limit velocity with higher maximum for better responsiveness\n      const maxSpeed = 0.04; // Increased from 0.02\n      if (shape.velocity.length() > maxSpeed) {\n        shape.velocity.normalize().multiplyScalar(maxSpeed);\n      }\n      \n      // Less damping for more persistent movement\n      shape.velocity.multiplyScalar(0.98); // Changed from 0.97\n      \n      // Update the actual mesh visual elements\n      if (shape.ref.current) {\n        // Position and rotation updates\n        shape.ref.current.position.copy(shape.position);\n        shape.ref.current.rotation.copy(shape.rotation);\n        \n        // Scale based on excitement and velocity\n        const speedFactor = shape.velocity.length() * 10;\n        const scaleFactor = 1 + (shape.excitementLevel * 0.2) + (speedFactor * 0.1);\n        shape.scale.set(scaleFactor, scaleFactor, scaleFactor);\n        shape.ref.current.scale.copy(shape.scale);\n        \n        // Manually update matrix for better performance \n        shape.ref.current.updateMatrix();\n      }\n    });\n  });\n\n  return (\n    <>\n      {/* Add particle burst effect when in fun mode */}\n      {easterEggActive && (\n        <pointLight\n          position={[0, 0, 0]}\n          distance={10}\n          intensity={3}\n          color={new THREE.Color().setHSL(\n            (clock.getElapsedTime() * 0.1) % 1, \n            0.8, \n            0.6\n          )}\n        />\n      )}\n      \n      {activeShapes.map((shape, i) => {\n        // Get initial colors from theme\n        const baseColor = themeColorToThreeColor(theme.palette.primary.main);\n        const emissiveColor = themeColorToThreeColor(theme.palette.primary.light);\n        \n        return (\n          <mesh\n            key={i}\n            ref={shape.ref}\n            position={shape.position}\n            onPointerOver={() => { shape.hovered = true; }}\n            onPointerOut={() => { shape.hovered = false; }}\n            matrixAutoUpdate={false}\n          >\n            <sphereGeometry args={[0.2, 16, 16]} />\n            <meshStandardMaterial\n              color={baseColor}\n              emissive={emissiveColor}\n              emissiveIntensity={0.2}\n              metalness={0.2}\n              roughness={0.7}\n            />\n          </mesh>\n        );\n      })}\n      \n      {/* Invisible ground plane for pointer events */}\n      <mesh\n        position={[0, 0, 0]}\n        rotation={[-Math.PI / 2, 0, 0]}\n        onPointerMove={(event) => {\n          // Update cursor position from pointer event\n          setCursorWorldPosition({\n            x: event.point.x,\n            y: event.point.y,\n            z: event.point.z\n          });\n        }}\n        visible={false}\n      >\n        <planeGeometry args={[20, 20]} />\n        <meshBasicMaterial transparent opacity={0} />\n      </mesh>\n    </>\n  );\n};\n\nexport default SphereScene;\n","import React, { useRef, useMemo, useEffect, useState } from 'react';\nimport { useFrame, useThree } from '@react-three/fiber';\nimport * as THREE from 'three';\nimport { useTheme } from '@mui/material/styles';\nimport { useMediaQuery } from '@mui/material';\nimport { useSceneState } from '../SceneContext';\nimport { getDynamicColor, themeColorToThreeColor } from '../utils/sceneThemeUtils';\nimport { SHAPE_TYPES } from '../constants';\n\n/**\n * BoxScene Component - Enhanced with automatic motion and better mouse tracking\n * \n * Creates an interactive 3D grid of cubes that:\n * - Responds to mouse movement with a ripple effect\n * - Features automatic wave motion when not interacted with\n * - Changes colors based on energy/activation levels\n */\nconst BoxScene = ({ \n  onClick, \n  onDragStart, \n  onDragEnd, \n  isDragging, \n  theme: propTheme, \n  performanceMode = 'medium' \n}) => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const { clock } = useThree();\n  const { isInteractionEnabled, hasInteraction } = useSceneState();\n  \n  // Number of cubes in the grid\n  const gridSize = isMobile ? 5 : 8;\n  \n  // Cube references and state\n  const cubeRefs = useRef([]);\n  const cubeStates = useRef([]);\n  \n  // Simplified cursor tracking using pointer events\n  const [cursorWorldPosition, setCursorWorldPosition] = useState({ x: 0, z: 0 });\n  \n  // State for easter egg and interaction tracking\n  const [easterEggActive] = useState(false);\n  const [interactionCount] = useState(0);\n  const [isTransitioning] = useState(false);\n\n  // Track previous cursor position for movement detection\n  const prevCursorPosition = useRef({ x: 0, z: 0 });\n  const hasCursorMoved = useRef(false);\n  const lastCursorMoveTime = useRef(0);\n  \n  // Initialize cube grid\n  const cubeGrid = useMemo(() => {\n    const grid = [];\n    const spacing = 1.0;\n    const offset = ((gridSize - 1) * spacing) / 2;\n    \n    cubeRefs.current = [];\n    cubeStates.current = [];\n    \n    for (let x = 0; x < gridSize; x++) {\n      for (let z = 0; z < gridSize; z++) {\n        const index = x * gridSize + z;\n        const xPos = (x * spacing) - offset;\n        const zPos = (z * spacing) - offset;\n        \n        grid.push({\n          index,\n          position: new THREE.Vector3(xPos, 0, zPos),\n          gridCoords: { x, z } // Add grid coordinates for debugging\n        });\n        \n        cubeRefs.current[index] = React.createRef();\n        cubeStates.current[index] = {\n          targetY: 0,\n          currentY: 0,\n          energy: 0,\n          lastActive: 0,\n          // Add properties for automatic motion\n          autoMovement: {\n            phase: Math.random() * Math.PI * 2, // Random starting phase\n            speed: 0.5 + Math.random() * 0.5,  // Random wave speed\n            amplitude: 0.1 + Math.random() * 0.3 // Random height\n          }\n        };\n      }\n    }\n    \n    return grid;\n  }, [gridSize]);\n  \n  // Add ref for wave origin point\n  const waveOrigin = useRef(new THREE.Vector2(0, 0));\n  const waveActive = useRef(false);\n  const waveTime = useRef(0);\n  \n  // Trigger a wave effect occasionally\n  useEffect(() => {\n    if (easterEggActive) {\n      // Generate random wave origin\n      waveOrigin.current.set(\n        (Math.random() * 2 - 1) * 3,\n        (Math.random() * 2 - 1) * 3\n      );\n      waveActive.current = true;\n      waveTime.current = 0;\n      \n      // Disable wave after a few seconds\n      const timer = setTimeout(() => {\n        waveActive.current = false;\n      }, 4000);\n      \n      return () => clearTimeout(timer);\n    }\n  }, [easterEggActive, interactionCount]);\n  \n  // Animation logic for cubes with enhanced mouse interaction\n  useFrame(() => {\n    if (isTransitioning) return;\n    \n    const currentTime = clock.getElapsedTime();\n    \n    // Initialize ripple variables at the beginning of the function\n    let rippleCenter = null;\n    let rippleStrength = Math.sin(currentTime * 3) * 0.5;\n    \n    // Track cursor movement\n    if (cursorWorldPosition) {\n      const distMoved = Math.sqrt(\n        Math.pow(cursorWorldPosition.x - prevCursorPosition.current.x, 2) +\n        Math.pow(cursorWorldPosition.z - prevCursorPosition.current.z, 2)\n      );\n      \n      if (distMoved > 0.05) {\n        hasCursorMoved.current = true;\n        lastCursorMoveTime.current = currentTime;\n        \n        // Create a ripple at cursor position when moving\n        rippleCenter = {\n          x: cursorWorldPosition.x,\n          z: cursorWorldPosition.z\n        };\n        rippleStrength = 0.4; // Further reduced for more precise effect\n        \n        // Update previous position\n        prevCursorPosition.current = {...cursorWorldPosition};\n      } else if (currentTime - lastCursorMoveTime.current > 0.3) {\n        hasCursorMoved.current = false;\n      }\n    }\n    \n    // Increment wave time if active\n    if (waveActive.current) {\n      waveTime.current += 0.05;\n    }\n    \n    // Create cursor-based ripples when cursor moves\n    if (hasCursorMoved.current && isInteractionEnabled) {\n      rippleCenter = {\n        x: cursorWorldPosition.x,\n        z: cursorWorldPosition.z\n      };\n      rippleStrength = 0.4; // Reduced strength for more precise effect\n    }\n    // Create automatic ripples occasionally\n    else if (easterEggActive || (currentTime % 10 < 0.1 && !hasInteraction)) {\n      // Random ripple center\n      rippleCenter = {\n        x: (Math.random() * 2 - 1) * (gridSize * 0.4), // Reduced area\n        z: (Math.random() * 2 - 1) * (gridSize * 0.4)  // Reduced area\n      };\n      rippleStrength = 0.6; // Reduced from 0.8\n    }\n    \n    // Update each cube\n    cubeGrid.forEach((cube) => {\n      const cubeRef = cubeRefs.current[cube.index];\n      const state = cubeStates.current[cube.index];\n      \n      if (!cubeRef.current) return;\n      \n      // Calculate heightmap from various influences\n      let finalHeight = 0;\n      \n      // 1. Basic sine wave pattern\n      const autoHeight = Math.sin(currentTime * state.autoMovement.speed + state.autoMovement.phase + cube.position.x + cube.position.z) * state.autoMovement.amplitude;\n      finalHeight += autoHeight;\n      \n      // 2. Mouse/cursor influence - precise localized interaction\n      if (isInteractionEnabled) {\n        const dist = Math.sqrt(\n          Math.pow(cube.position.x - cursorWorldPosition.x, 2) + \n          Math.pow(cube.position.z - cursorWorldPosition.z, 2)\n        );\n        \n        // Precise interaction radius for localized effect (about 3x3 grid)\n        const interactionRadius = 1.5; // Fixed radius for consistent interaction\n        if (dist < interactionRadius) {\n          // Sharp falloff for precise activation\n          const strength = Math.pow(1 - Math.min(1, dist / interactionRadius), 2.0);\n          finalHeight += 1.2 * strength;\n          state.energy = Math.min(1, state.energy + 0.2 * strength);\n          state.lastActive = currentTime;\n        }\n      }\n      \n      // 3. Apply ripple effect with improved parameters\n      if (rippleCenter) {\n        const rippleDist = Math.sqrt(\n          Math.pow(cube.position.x - rippleCenter.x, 2) + \n          Math.pow(cube.position.z - rippleCenter.z, 2)\n        );\n        \n        // Controlled ripple effect for wave propagation\n        const waveFrequency = 2.0; \n        const maxRippleDistance = 4.0; // Limited distance for controlled waves\n        \n        if (rippleDist < maxRippleDistance) {\n          // Calculate ripple wave effect with controlled propagation\n          const ripplePhase = rippleDist * waveFrequency - currentTime * 5;\n          const falloff = Math.pow(1 - Math.min(1, rippleDist / maxRippleDistance), 1.0);\n          const rippleEffect = Math.sin(ripplePhase) * rippleStrength * falloff;\n          \n          finalHeight += rippleEffect * 0.8; // Reduced intensity\n          \n          // Add energy based on ripple for visual effects\n          if (Math.abs(rippleEffect) > 0.1) {\n            state.energy = Math.max(state.energy, Math.abs(rippleEffect) * 0.5);\n          }\n        }\n      }\n      \n      // 4. Easter egg wave effect\n      if (waveActive.current && waveTime.current < 8) {\n        const distFromWave = Math.sqrt(\n          Math.pow(cube.position.x - waveOrigin.current.x, 2) + \n          Math.pow(cube.position.z - waveOrigin.current.y, 2)\n        );\n        \n        // Create an expanding circular wave\n        const waveRadius = waveTime.current * 1.2;\n        const waveWidth = 1.0;\n        const distFromWaveEdge = Math.abs(distFromWave - waveRadius);\n        \n        if (distFromWaveEdge < waveWidth) {\n          // Cube is in the wave front\n          const waveIntensity = 1.0 - (distFromWaveEdge / waveWidth);\n          finalHeight += waveIntensity * 2.0 * (1.0 - (waveTime.current / 8));\n          state.energy = Math.max(state.energy, waveIntensity);\n        }\n      }\n      \n      // 5. Easter egg special effects\n      if (easterEggActive) {\n        // Add synchronized height patterns\n        const gridX = Math.floor((cube.position.x + (gridSize/2)) / 1.0);\n        const gridZ = Math.floor((cube.position.z + (gridSize/2)) / 1.0);\n        \n        // Checkerboard pattern\n        const isEvenSquare = (gridX + gridZ) % 2 === 0;\n        const checkerboardHeight = isEvenSquare ? \n          Math.sin(currentTime * 3) * 0.5 : \n          Math.sin(currentTime * 3 + Math.PI) * 0.5;\n          \n        finalHeight += checkerboardHeight;\n        \n        // Increase energy for more visual effects\n        state.energy = Math.max(state.energy, 0.3);\n      } else {\n        // When not in Easter egg mode, reduce energy gradually\n        state.energy = Math.max(0, state.energy - 0.03);\n      }\n      \n      // Set the target height\n      state.targetY = finalHeight;\n      \n      // Smooth movement toward target height - faster response\n      state.currentY += (state.targetY - state.currentY) * 0.15; // Increased from 0.1\n      \n      // Update cube position and appearance\n      cubeRef.current.position.y = state.currentY;\n      \n      // Auto-rotation based on energy level and Easter egg status\n      const rotationMultiplier = easterEggActive ? 3.0 : 1.0;\n      const baseRotationSpeed = 0.001 * rotationMultiplier;\n      cubeRef.current.rotation.y += baseRotationSpeed + state.energy * 0.03 * rotationMultiplier;\n      cubeRef.current.rotation.x += baseRotationSpeed + state.energy * 0.02 * rotationMultiplier;\n      \n      // Update scale based on energy in Easter egg mode\n      if (easterEggActive) {\n        const scalePulse = 1.0 + state.energy * 0.3 * Math.sin(currentTime * 4 + cube.index * 0.2);\n        cubeRef.current.scale.set(scalePulse, scalePulse, scalePulse);\n      } else {\n        cubeRef.current.scale.set(1, 1, 1);\n      }\n      \n      // Update color based on energy and mode using the unified color system\n      if (cubeRef.current.material) {\n        // Use the getDynamicColor helper for consistent color derivation\n        const dynamicColors = getDynamicColor(\n          theme,\n          currentTime + (cube.index * 0.1), // Add cube index for variation\n          state.energy,\n          SHAPE_TYPES.CUBE,\n          false // not hovered\n        );\n        \n        // Apply colors to material\n        cubeRef.current.material.color.copy(dynamicColors.main);\n        cubeRef.current.material.emissive.copy(dynamicColors.emissive);\n        cubeRef.current.material.emissiveIntensity = dynamicColors.emissiveIntensity;\n        \n        // Override with rainbow colors in Easter egg mode\n        if (easterEggActive) {\n          const hue = ((currentTime * 0.2) + (cube.index * 0.01)) % 1.0;\n          cubeRef.current.material.color.setHSL(hue, 0.8, 0.5);\n          cubeRef.current.material.emissive.setHSL(hue, 0.9, 0.3);\n          cubeRef.current.material.emissiveIntensity = 0.5;\n        }\n        \n        // Update material\n        cubeRef.current.material.needsUpdate = true;\n      }\n    });\n  });\n  \n  return (\n    <group position={[0, -1, 0]}>\n      {/* Invisible ground plane for pointer events */}\n      <mesh\n        position={[0, -0.5, 0]}\n        rotation={[-Math.PI / 2, 0, 0]}\n        onPointerMove={(event) => {\n          // Update cursor position from pointer event\n          setCursorWorldPosition({\n            x: event.point.x,\n            z: event.point.z\n          });\n        }}\n        visible={false}\n      >\n        <planeGeometry args={[gridSize * 2, gridSize * 2]} />\n        <meshBasicMaterial transparent opacity={0} />\n      </mesh>\n      \n      {/* Add central light in Easter egg mode */}\n      {easterEggActive && (\n        <pointLight\n          position={[0, 2, 0]}\n          intensity={2}\n          distance={10}\n          color={new THREE.Color().setHSL(0.8, 0.8, 0.6)} // Theme-derived color\n        />\n      )}\n      \n      {/* Cube meshes with theme-derived base colors */}\n      {cubeGrid.map((cube, i) => {\n        // Get initial color from theme\n        const baseColor = themeColorToThreeColor(theme.palette.primary.main);\n        const emissiveColor = themeColorToThreeColor(theme.palette.primary.light);\n        \n        return (\n          <mesh\n            key={i}\n            ref={cubeRefs.current[i]}\n            position={[cube.position.x, 0, cube.position.z]}\n          >\n            <boxGeometry args={[0.5, 0.5, 0.5]} />\n            <meshStandardMaterial \n              color={baseColor}\n              emissive={emissiveColor}\n              emissiveIntensity={0}\n              metalness={0.3}\n              roughness={0.7}\n            />\n          </mesh>\n        );\n      })}\n    </group>\n  );\n};\n\nexport default BoxScene;\n","import React, { useRef, useMemo, useEffect, useCallback } from 'react';\nimport { useTheme } from '@mui/material';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as THREE from 'three';\n\nimport { useSceneState } from '../SceneContext';\nimport { getDynamicColor } from '../utils/sceneThemeUtils';\nimport { SHAPE_TYPES, DIMENSIONS } from '../constants';\n\n/**\n * TorusScene Component - Interactive 3D Torus Geometry\n *\n * Interaction\n * - Move mouse: rotates torus and changes colors\n * - Click: spawns new torus rings with different materials\n * - Double click (or press \"Enter\"): cycles to next scene\n *\n * Visual\n * - Multiple torus geometries with different materials\n * - Theme-driven colors with emissive effects\n * - Smooth rotation and scaling animations\n * - Interactive hover effects\n */\n\nconst TORUS_COUNT = 8;\nconst ROTATION_SPEED = 0.01;\nconst HOVER_SCALE = 1.2;\nconst INTERACTION_RADIUS = 3;\n\nconst TorusScene = ({ \n  color = new THREE.Color(),\n  mousePosition, \n  mouseData,\n  isTransitioning,\n  easterEggActive = false,\n  interactionCount = 0\n}) => {\n  const theme = useTheme();\n  const { camera, gl } = useThree();\n  const { isInteractionEnabled, switchShapeType } = useSceneState();\n  \n  // Refs for torus meshes and animation state\n  const torusGroupRef = useRef();\n  const torusRefs = useRef([]);\n  const mouseWorldPos = useRef(new THREE.Vector3());\n  const raycaster = useMemo(() => new THREE.Raycaster(), []);\n  const mouse = useRef(new THREE.Vector2());\n  const timeRef = useRef(0);\n  \n  // Responsive torus count\n  const actualTorusCount = TORUS_COUNT;\n\n  // Initialize torus data\n  const torusData = useMemo(() => {\n    return Array.from({ length: actualTorusCount }, (_, i) => {\n      const angle = (i / actualTorusCount) * Math.PI * 2;\n      const radius = 2 + Math.sin(i * 0.5) * 0.5;\n      return {\n        id: i,\n        position: [\n          Math.cos(angle) * radius,\n          Math.sin(angle) * radius,\n          (Math.random() - 0.5) * 2\n        ],\n        rotation: [Math.random() * Math.PI, Math.random() * Math.PI, Math.random() * Math.PI],\n        scale: 0.3 + Math.random() * 0.4,\n        speed: 0.5 + Math.random() * 0.5,\n        hovered: false,\n        material: i % 3 // Different material types\n      };\n    });\n  }, [actualTorusCount]);\n\n  // Mouse position tracking\n  const updateMousePosition = useCallback((event) => {\n    // Get canvas from the WebGL renderer\n    const canvas = gl.domElement;\n    if (!canvas) return;\n    \n    const rect = canvas.getBoundingClientRect();\n    const x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\n    const y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n    \n    mouse.current.set(x, y);\n    \n    // Update world position for interaction\n    raycaster.setFromCamera(mouse.current, camera);\n    const intersectPoint = new THREE.Vector3();\n    raycaster.ray.intersectPlane(new THREE.Plane(new THREE.Vector3(0, 0, 1), 0), intersectPoint);\n    mouseWorldPos.current.copy(intersectPoint);\n  }, [camera, raycaster, gl]);\n\n  // Create torus geometry and materials\n  const torusGeometry = useMemo(() => {\n    const { radius, tube, radialSegments, tubularSegments } = DIMENSIONS.torus;\n    return new THREE.TorusGeometry(radius, tube, radialSegments, tubularSegments);\n  }, []);\n\n  const materials = useMemo(() => {\n    return [\n      // Standard material\n      new THREE.MeshStandardMaterial({\n        metalness: 0.7,\n        roughness: 0.2,\n        transparent: true,\n        opacity: 0.8\n      }),\n      // Emissive material\n      new THREE.MeshStandardMaterial({\n        metalness: 0.3,\n        roughness: 0.4,\n        transparent: true,\n        opacity: 0.9,\n        emissiveIntensity: 0.3\n      }),\n      // Glass-like material\n      new THREE.MeshPhysicalMaterial({\n        metalness: 0.1,\n        roughness: 0.1,\n        transmission: 0.9,\n        transparent: true,\n        opacity: 0.7,\n        thickness: 0.5\n      })\n    ];\n  }, []);\n\n  // Initialize torus refs\n  useEffect(() => {\n    torusRefs.current = torusRefs.current.slice(0, actualTorusCount);\n  }, [actualTorusCount]);\n\n  // Interaction handlers\n  const onPointerMove = useCallback((e) => {\n    if (!isInteractionEnabled || isTransitioning) return;\n    updateMousePosition(e);\n    \n    // Check for torus hover\n    raycaster.setFromCamera(mouse.current, camera);\n    const meshes = torusRefs.current.filter(Boolean);\n    const intersects = raycaster.intersectObjects(meshes);\n    \n    // Reset all hover states\n    torusData.forEach(data => data.hovered = false);\n    \n    if (intersects.length > 0) {\n      const intersected = intersects[0].object;\n      const index = torusRefs.current.indexOf(intersected);\n      if (index !== -1) {\n        torusData[index].hovered = true;\n      }\n    }\n  }, [isInteractionEnabled, isTransitioning, updateMousePosition, camera, raycaster, torusData]);\n\n  const onPointerDown = useCallback((e) => {\n    if (!isInteractionEnabled || isTransitioning) return;\n    updateMousePosition(e);\n    \n    // Add a new torus or trigger effect on click\n    if (torusGroupRef.current) {\n      const randomTorus = torusRefs.current[Math.floor(Math.random() * torusRefs.current.length)];\n      if (randomTorus) {\n        // Trigger a scale animation\n        randomTorus.scale.setScalar(0.1);\n      }\n    }\n  }, [isInteractionEnabled, isTransitioning, updateMousePosition]);\n\n  // Handle keyboard for Enter to cycle\n  useEffect(() => {\n    const onKeyDown = (e) => {\n      if (e.key === 'Enter' && switchShapeType) switchShapeType();\n    };\n    window.addEventListener('keydown', onKeyDown);\n    return () => {\n      window.removeEventListener('keydown', onKeyDown);\n    };\n  }, [switchShapeType]);\n\n  // Main animation loop\n  useFrame((_, dt) => {\n    if (isTransitioning) return;\n    \n    timeRef.current += dt;\n    const t = timeRef.current;\n\n    // Update torus group rotation\n    if (torusGroupRef.current) {\n      torusGroupRef.current.rotation.y += ROTATION_SPEED;\n      torusGroupRef.current.rotation.x += ROTATION_SPEED * 0.5;\n    }\n\n    // Update individual torus meshes\n    torusRefs.current.forEach((mesh, i) => {\n      if (!mesh) return;\n      \n      const data = torusData[i];\n      if (!data) return;\n\n      // Individual rotation\n      mesh.rotation.x += dt * data.speed;\n      mesh.rotation.y += dt * data.speed * 0.7;\n      mesh.rotation.z += dt * data.speed * 0.3;\n\n      // Hover scaling\n      const targetScale = data.hovered ? data.scale * HOVER_SCALE : data.scale;\n      mesh.scale.lerp(new THREE.Vector3(targetScale, targetScale, targetScale), 0.1);\n\n      // Mouse interaction - attract/repel effect\n      if (isInteractionEnabled && mouseWorldPos.current) {\n        const distance = mesh.position.distanceTo(mouseWorldPos.current);\n        if (distance < INTERACTION_RADIUS) {\n          const force = (INTERACTION_RADIUS - distance) / INTERACTION_RADIUS;\n          const direction = new THREE.Vector3()\n            .subVectors(mesh.position, mouseWorldPos.current)\n            .normalize()\n            .multiplyScalar(force * 0.02);\n          mesh.position.add(direction);\n        }\n      }\n\n      // Floating animation\n      mesh.position.y += Math.sin(t * data.speed + i) * 0.002;\n      mesh.position.z += Math.cos(t * data.speed * 0.7 + i) * 0.001;\n\n      // Update material colors\n      if (mesh.material) {\n        const dynamic = getDynamicColor(\n          theme,\n          t + i * 0.1,\n          data.hovered ? 1 : 0.5,\n          SHAPE_TYPES.TORUS,\n          data.hovered\n        );\n        \n        mesh.material.color.copy(dynamic.main);\n        mesh.material.emissive.copy(dynamic.emissive);\n        \n        if (easterEggActive) {\n          const hue = ((t * 0.5) + (i * 0.1)) % 1.0;\n          mesh.material.color.setHSL(hue, 0.8, 0.6);\n          mesh.material.emissive.setHSL((hue + 0.3) % 1.0, 0.9, 0.3);\n          mesh.material.emissiveIntensity = 0.5;\n        }\n      }\n    });\n  });\n\n  return (\n    <group>\n\n      {/* Main torus group with interactions */}\n      <group\n        ref={torusGroupRef}\n        onPointerMove={onPointerMove}\n        onPointerDown={onPointerDown}\n        onDoubleClick={() => switchShapeType && switchShapeType()}\n      >\n        {/* Render torus meshes */}\n        {torusData.map((data, i) => (\n          <mesh\n            key={data.id}\n            ref={(el) => (torusRefs.current[i] = el)}\n            geometry={torusGeometry}\n            material={materials[data.material]}\n            position={data.position}\n            rotation={data.rotation}\n            scale={data.scale}\n          />\n        ))}\n      </group>\n    </group>\n  );\n};\n\nexport default TorusScene;\n","import React, { useMemo, useState, useEffect } from 'react';\nimport { useThree } from '@react-three/fiber';\nimport { useSceneState } from './SceneContext';\nimport { extractThemeColors, themeColorToThreeColor } from './utils/sceneThemeUtils';\nimport SphereScene from './scenes/SphereScene';\nimport BoxScene from './scenes/BoxScene'; \nimport TorusScene from './scenes/TorusScene';\nimport { SHAPE_TYPES } from './constants';\n\n/**\n * ActiveScene - Manages which 3D scene is currently active\n */\nconst ActiveScene = ({ \n  onClick, \n  isDragging, \n  theme,\n  easterEggActive = false,\n  interactionCount = 0\n}) => {\n  // eslint-disable-next-line no-unused-vars\n  const { size } = useThree();\n  const { currentShapeType, switchShapeType, isTransitioning } = useSceneState();\n  // eslint-disable-next-line no-unused-vars\n  const [transitionProgress, setTransitionProgress] = useState(0);\n  \n  // Extract theme colors and use them to determine active color\n  useMemo(() => {\n    return extractThemeColors(theme);\n  }, [theme]);\n  \n  // Set transition state when scene changes\n  useEffect(() => {\n    if (isTransitioning) {\n      let startTime = Date.now();\n      const transitionDuration = 1000; // 1 second transition\n      \n      const updateTransition = () => {\n        const elapsed = Date.now() - startTime;\n        const progress = Math.min(1, elapsed / transitionDuration);\n        \n        setTransitionProgress(progress);\n        \n        if (progress < 1) {\n          requestAnimationFrame(updateTransition);\n        }\n      };\n      \n      requestAnimationFrame(updateTransition);\n    }\n  }, [isTransitioning]);\n  \n  // Scene click handler\n  const handleSceneClick = () => {\n    if (onClick && !isDragging) {\n      onClick();\n    }\n    \n    if (!isTransitioning && switchShapeType) {\n      // Use the switchShapeType function from context to handle scene changes\n      switchShapeType();\n    }\n  };\n  \n  // Get appropriate color for current scene - using theme derivation\n  const activeColor = useMemo(() => {\n    // Get the appropriate theme color based on scene type\n    let themeColor;\n    \n    switch (currentShapeType) {\n      case SHAPE_TYPES.SPHERE:\n        themeColor = theme.palette.primary.main;\n        break;\n      case SHAPE_TYPES.BOX:\n        themeColor = theme.palette.primary.main;\n        break;\n      case SHAPE_TYPES.TORUS:\n        themeColor = theme.palette.info?.main || theme.palette.primary.light;\n        break;\n      default:\n        themeColor = theme.palette.primary.main;\n    }\n    \n    // Convert to THREE.Color\n    return themeColorToThreeColor(themeColor);\n  }, [currentShapeType, theme.palette]);\n  \n  return (\n    <group onClick={handleSceneClick}>\n      {/* Pass both mousePosition and complete mouseData */}\n      {currentShapeType === SHAPE_TYPES.SPHERE && (\n        <SphereScene \n          color={activeColor}\n          isTransitioning={isTransitioning}\n          easterEggActive={easterEggActive}\n          interactionCount={interactionCount}\n          theme={theme}\n        />\n      )}\n      \n      {currentShapeType === SHAPE_TYPES.CUBE && (\n        <BoxScene \n          color={activeColor}\n          isTransitioning={isTransitioning}\n          easterEggActive={easterEggActive}\n          interactionCount={interactionCount}\n        />\n      )}\n      \n      {currentShapeType === SHAPE_TYPES.TORUS && (\n        <TorusScene \n          color={activeColor}\n          isTransitioning={isTransitioning}\n          easterEggActive={easterEggActive}\n          interactionCount={interactionCount}\n        />\n      )}\n    </group>\n  );\n};\n\nexport default ActiveScene;\n","import React from 'react';\nimport { Box, CircularProgress, Typography, useTheme } from '@mui/material';\n\n/**\n * LoadingFallback Component\n * \n * Displays a loading spinner and message while the 3D scene is initializing.\n * Provides a smoother experience when the Three.js canvas is loading.\n */\nconst LoadingFallback = () => {\n  const theme = useTheme();\n  \n  return (\n    <Box\n      sx={{\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: theme.palette.background.default,\n        zIndex: 5,\n      }}\n    >\n      <CircularProgress \n        size={40} \n        thickness={4} \n        sx={{ \n          color: theme.palette.primary.main,\n          mb: 2\n        }} \n      />\n      <Typography \n        variant=\"body2\" \n        color=\"textSecondary\"\n        sx={{ \n          fontWeight: 500,\n          opacity: 0.8\n        }}\n      >\n        Loading 3D environment...\n      </Typography>\n    </Box>\n  );\n};\n\nexport default LoadingFallback;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useFrame, useThree } from '@react-three/fiber';\nimport { OrbitControls, PerspectiveCamera } from '@react-three/drei';\nimport * as THREE from 'three';\nimport { useSceneState } from './SceneContext';\n\n/**\n * Interactive Camera System\n * \n * Provides advanced camera controls with:\n * - Auto-rotation when idle\n * - Smooth transitions between camera positions\n * - Focus on specific scene elements\n * - Zoom functionality with the scroll wheel\n */\nconst InteractiveCamera = ({ enableAutoRotate = true, rotateSpeed = 0.2 }) => {\n  const { camera, gl } = useThree();\n  const controlsRef = useRef();\n  const { isTransitioning, isDragging, currentShapeType } = useSceneState();\n  const [lastInteraction, setLastInteraction] = useState(Date.now());\n  const [isAutoRotating, setIsAutoRotating] = useState(true);\n  \n  // Set initial camera position\n  useEffect(() => {\n    camera.position.set(0, 0, 16); // Increased from 12 to 16 for a more zoomed-out view\n    camera.lookAt(0, 0, 0);\n  }, [camera]);\n  \n  // Handle camera target updates based on shape type\n  useEffect(() => {\n    if (!controlsRef.current) return;\n    \n    const target = new THREE.Vector3(0, 0, 0);\n    \n    // Different shapes can have slightly different camera focus points\n    switch (currentShapeType) {\n      case 0: // SPHERE\n        target.set(0, 0, 0);\n        break;\n      case 1: // CUBE\n        target.set(0, 0.5, 0);\n        break;\n      case 2: // TORUS\n        target.set(0, 0, 0);\n        break;\n      default:\n        target.set(0, 0, 0);\n    }\n    \n    // Smoothly transition to new target\n    const startTarget = controlsRef.current.target.clone();\n    const duration = 1000; // ms\n    const startTime = Date.now();\n    \n    function updateTarget() {\n      const elapsed = Date.now() - startTime;\n      const progress = Math.min(elapsed / duration, 1);\n      const easeProgress = progress < 0.5 \n        ? 2 * progress * progress \n        : 1 - Math.pow(-2 * progress + 2, 2) / 2; // Ease in-out quad\n      \n      const newTarget = new THREE.Vector3().lerpVectors(\n        startTarget,\n        target,\n        easeProgress\n      );\n      \n      controlsRef.current.target.copy(newTarget);\n      \n      if (progress < 1) {\n        requestAnimationFrame(updateTarget);\n      }\n    }\n    \n    updateTarget();\n  }, [currentShapeType]);\n\n  // Auto-rotation logic when idle\n  useFrame(() => {\n    if (!controlsRef.current) return;\n    \n    const idleTime = Date.now() - lastInteraction;\n    const shouldAutoRotate = enableAutoRotate && idleTime > 3000 && !isDragging;\n    \n    if (shouldAutoRotate !== isAutoRotating) {\n      setIsAutoRotating(shouldAutoRotate);\n      controlsRef.current.autoRotate = shouldAutoRotate;\n    }\n    \n    // Adjust damping during transitions for smoother movement\n    if (isTransitioning) {\n      controlsRef.current.dampingFactor = 0.1;\n    } else {\n      controlsRef.current.dampingFactor = 0.05;\n    }\n  });\n  \n  // Reset idle timer on user interaction\n  const handleInteraction = () => {\n    setLastInteraction(Date.now());\n    if (isAutoRotating) {\n      setIsAutoRotating(false);\n      controlsRef.current.autoRotate = false;\n    }\n  };\n  \n  return (\n    <>\n      <PerspectiveCamera \n        makeDefault \n        fov={40} \n        near={0.1} \n        far={100}\n      />\n      \n      <OrbitControls\n        ref={controlsRef}\n        enableZoom={false} // Disabled zoom to prevent interference with page scrolling\n        minDistance={12}\n        maxDistance={20}\n        zoomSpeed={0.6}\n        enablePan={false}\n        rotateSpeed={rotateSpeed}\n        minPolarAngle={Math.PI / 6}\n        maxPolarAngle={Math.PI / 1.5}\n        dampingFactor={0.05}\n        autoRotate={isAutoRotating}\n        autoRotateSpeed={0.5}\n        domElement={gl.domElement}\n        onStart={handleInteraction}\n        onEnd={handleInteraction}\n        onChange={handleInteraction}\n      />\n    </>\n  );\n};\n\nexport default InteractiveCamera;","import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { SceneProvider, useSceneState } from './SceneContext';\nimport ActiveScene from './ActiveScene';\nimport LoadingFallback from './components/LoadingFallback';\nimport { CANVAS_SETTINGS } from './constants';\nimport InteractiveCamera from './InteractiveCamera';\nimport { useTheme } from '@mui/material/styles';\n\n\n/**\n * Background3DInner Component - Inner component with access to SceneContext\n */\nconst Background3DInner = ({ onSceneClick, performanceMode = 'medium', mouseData }) => {\n  const theme = useTheme();\n  const { switchShapeType, updateDragging } = useSceneState();\n  const [isDragging, setIsDragging] = useState(false);\n  \n  // Update dragging state to context\n  useEffect(() => {\n    updateDragging(isDragging);\n  }, [isDragging, updateDragging]);\n  \n  // Handle ActiveScene click with performance optimization\n  const handleSceneClick = useCallback(() => {\n    // Only trigger if not dragging\n    if (!isDragging) {\n      // Invoke context method to change shape\n      switchShapeType();\n      \n      // Also call parent handler if provided\n      if (onSceneClick) {\n        onSceneClick();\n      }\n    }\n  }, [onSceneClick, switchShapeType, isDragging]);\n\n  return (\n    <>\n      \n      {/* Advanced Camera with auto-rotation and interaction */}\n      <InteractiveCamera enableAutoRotate={true} rotateSpeed={0.3} />\n      \n      {/* Lights - using theme colors */}\n      <ambientLight \n        intensity={theme.palette.mode === 'dark' ? 0.4 : 0.6} \n        color={theme.palette.primary.contrastText}\n      />\n      <pointLight \n        position={[10, 10, 10]} \n        intensity={theme.palette.mode === 'dark' ? 0.7 : 0.9}\n        color={theme.palette.primary.light}\n      />\n      <pointLight \n        position={[-10, -10, -10]} \n        intensity={0.4}\n        color={theme.palette.primary.light}\n      />\n      \n      \n      {/* Main scene with shapes */}\n      <ActiveScene \n        onClick={handleSceneClick} \n        onDragStart={() => setIsDragging(true)}\n        onDragEnd={() => setIsDragging(false)}\n        isDragging={isDragging}\n        theme={theme}\n        performanceMode={performanceMode}\n      />\n    </>\n  );\n};\n\n/**\n * Background3D Component - Enhanced interactive 3D background for the hero section\n */\nconst Background3D = ({ onSceneClick, performanceMode = 'medium' }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const theme = useTheme();\n  \n  // Simplified mouse data - will be handled by pointer events in scenes\n  const mouseData = { active: true };\n  \n  // Handle loading state\n  const handleLoaded = useCallback(() => {\n    setIsLoading(false);\n  }, []);\n\n  // Memoize canvas style to prevent unnecessary re-renders\n  const canvasStyle = useMemo(() => ({\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    overflow: 'hidden',\n    zIndex: 0,\n    backgroundColor: theme.palette.background.default,\n    transition: theme.transitions.create('background-color', {\n      duration: theme.transitions.duration.standard,\n    }),\n  }), [theme]);\n\n  return (\n    <div style={canvasStyle}>\n      {isLoading && <LoadingFallback />}\n      \n      <SceneProvider>\n        {/* REMOVED SceneControls completely to avoid duplication and conflicts */}\n        \n        <Canvas \n          camera={CANVAS_SETTINGS.camera}\n          gl={CANVAS_SETTINGS.gl}\n          style={{ \n            background: theme.palette.background.default,\n            visibility: isLoading ? 'hidden' : 'visible',\n            touchAction: 'none' // Prevents touch scrolling while interacting\n          }}\n          onCreated={handleLoaded}\n          dpr={performanceMode === 'high' ? window.devicePixelRatio : 1}\n        >\n          <Background3DInner \n            onSceneClick={onSceneClick} \n            theme={theme} \n            performanceMode={performanceMode}\n            mouseData={mouseData}\n          />\n        </Canvas>\n      </SceneProvider>\n    </div>\n  );\n};\n\nexport default Background3D;\n","import React, { useState, useEffect } from 'react';\nimport { Box, Typography, Fade, useTheme } from '@mui/material';\nimport MouseIcon from '@mui/icons-material/Mouse';\nimport TouchAppIcon from '@mui/icons-material/TouchApp';\nimport ThreeDRotationIcon from '@mui/icons-material/ThreeDRotation';\n\n/**\n * InteractionGuide Component\n * \n * Displays visual cues to guide users on how to interact with the 3D background.\n * - Shows different instructions for mouse vs touch devices\n * - Provides scene-specific instructions\n * - Fades out after a short period\n * - Can be toggled on/off with a prop\n */\nconst InteractionGuide = ({ \n  show = true, \n  autoHideDelay = 2000, // Reduced from 5000ms to 2000ms\n  position = 'bottom'\n}) => {\n  const theme = useTheme();\n  const [visible, setVisible] = useState(true);\n  const [isTouchDevice, setIsTouchDevice] = useState(false);\n  \n  // Detect touch device\n  useEffect(() => {\n    setIsTouchDevice('ontouchstart' in window || navigator.maxTouchPoints > 0);\n  }, []);\n  \n  // Auto-hide after delay\n  useEffect(() => {\n    if (!show) {\n      setVisible(false);\n      return;\n    }\n    \n    setVisible(true);\n    const timer = setTimeout(() => {\n      setVisible(false);\n    }, autoHideDelay);\n    \n    return () => clearTimeout(timer);\n  }, [show, autoHideDelay]);\n  \n  // Position styles\n  const positionStyles = {\n    top: {\n      top: '20%',\n      left: '50%',\n      transform: 'translateX(-50%)',\n    },\n    center: {\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n    },\n    bottom: {\n      bottom: '15%',\n      left: '50%',\n      transform: 'translateX(-50%)',\n    }\n  };\n\n  // Get minimal, non-prescriptive instructions\n  const getInstructions = () => {\n    return {\n      action: isTouchDevice \n        ? \"Touch to interact\" \n        : \"Click to interact\",\n      secondary: isTouchDevice\n        ? \"Drag to explore\"\n        : \"Move and drag to explore\"\n    };\n  };\n\n  const instructions = getInstructions();\n  \n  return (\n    <Fade in={visible && show} timeout={{ enter: 600, exit: 400 }}>\n      <Box\n        sx={{\n          position: 'absolute',\n          ...positionStyles[position],\n          bgcolor: 'rgba(0, 0, 0, 0.7)',\n          color: 'white',\n          padding: '12px 20px',\n          borderRadius: '24px',\n          backdropFilter: 'blur(4px)',\n          boxShadow: theme.shadows[4],\n          zIndex: 100,\n          pointerEvents: 'none',\n          textAlign: 'center',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          gap: 1,\n          maxWidth: '200px',\n        }}\n      >\n        {isTouchDevice ? (\n          <>\n            <TouchAppIcon fontSize=\"medium\" />\n            <Box>\n              <Typography variant=\"body2\" fontWeight=\"bold\">\n                {instructions.action}\n              </Typography>\n              <Typography variant=\"body2\" sx={{ opacity: 0.8, mt: 0.5 }}>\n                {instructions.secondary}\n              </Typography>\n            </Box>\n          </>\n        ) : (\n          <>\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n              <MouseIcon fontSize=\"small\" />\n              <ThreeDRotationIcon fontSize=\"small\" />\n            </Box>\n            <Box>\n              <Typography variant=\"body2\" fontWeight=\"bold\">\n                {instructions.action}\n              </Typography>\n              <Typography variant=\"body2\" sx={{ opacity: 0.8, mt: 0.5 }}>\n                {instructions.secondary}\n              </Typography>\n            </Box>\n          </>\n        )}\n      </Box>\n    </Fade>\n  );\n};\n\nexport default InteractionGuide;","import React, { useState, useEffect, memo, useCallback, useRef, useReducer } from 'react';\nimport { Box, useTheme, useMediaQuery, IconButton, Tooltip, Fade } from '@mui/material';\nimport HeroContent from './HeroContent';\nimport ErrorBoundary from '../common/ErrorBoundary';\nimport ScrollIndicator from './ScrollIndicator';\nimport MobileScrollHelper from './MobileScrollHelper';\nimport Background3D from './background3d/Background3D';\nimport { SHAPE_TYPES } from './background3d/constants';\nimport { SceneProvider, useSceneState } from './background3d/SceneContext';\nimport InteractionGuide from './background3d/components/InteractionGuide';\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\n\n/**\n * HeroBackground Component - Handles the 3D background with proper context integration\n */\nconst HeroBackground = memo(({ onSceneClick, onToggleParticles, showParticles, easterEggActive, interactionCount }) => {\n  const [showInteractionHint, setShowInteractionHint] = useState(false); // Changed to false - no auto-show\n  \n  // Only show hint briefly on first load, then let users discover naturally\n  useEffect(() => {\n    let hideTimer;\n    const showTimer = setTimeout(() => {\n      setShowInteractionHint(true);\n      hideTimer = setTimeout(() => setShowInteractionHint(false), 1500);\n    }, 1000); // Show after 1 second delay\n\n    return () => {\n      clearTimeout(showTimer);\n      if (hideTimer) {\n        clearTimeout(hideTimer);\n      }\n    };\n  }, []);\n  \n  return (\n    <ErrorBoundary \n      componentName=\"Background3D\"\n      fallback={\n        <Box \n          sx={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            opacity: 0.6,\n            background: 'radial-gradient(circle at 30% 30%, rgba(0,0,0,0.05) 0%, rgba(0,0,0,0.2) 100%)',\n            pointerEvents: 'none',\n          }}\n        />\n      }\n    >\n      {/* Provide SceneContext at this level to control the scene */}\n      <SceneProvider>\n        <BackgroundController\n          onSceneClick={onSceneClick}\n          onToggleParticles={onToggleParticles}\n          showParticles={showParticles}\n          showInteractionHint={showInteractionHint}\n          easterEggActive={easterEggActive}\n          interactionCount={interactionCount}\n        />\n      </SceneProvider>\n    </ErrorBoundary>\n  );\n});\n\n/**\n * BackgroundController - Component with access to scene context\n */\nconst BackgroundController = memo(({ \n  onSceneClick, \n  onToggleParticles, \n  showParticles, \n  showInteractionHint,\n  easterEggActive,\n  interactionCount\n}) => {\n  const theme = useTheme();\n  const [showGuide, setShowGuide] = useState(false);\n  const { switchShapeType } = useSceneState();\n  \n  // Handle background click\n  const handleBackgroundClick = useCallback(() => {\n    // Update scene context\n    switchShapeType();\n    \n    // Notify parent component\n    if (onSceneClick) {\n      onSceneClick();\n    }\n  }, [switchShapeType, onSceneClick]);\n  \n  // Toggle interaction guide\n  const handleToggleGuide = useCallback(() => {\n    setShowGuide(prev => !prev);\n  }, []);\n  \n  return (\n    <>\n      <Background3D \n        theme={theme} \n        onSceneClick={handleBackgroundClick} \n        performanceMode=\"medium\"\n      />\n      \n      {/* Information button only - positioned in top right */}\n      <Box\n        sx={{\n          position: 'absolute',\n          top: 90,\n          right: 30,\n          zIndex: 10,\n          display: 'flex',\n          pointerEvents: 'auto',\n        }}\n      >\n        {/* Info/help button to show interaction guide */}\n        <Tooltip title=\"Help\">\n          <IconButton \n            onClick={handleToggleGuide}\n            sx={{\n              backgroundColor: 'rgba(0,0,0,0.2)',\n              color: showGuide ? theme.palette.primary.main : 'rgba(255,255,255,0.7)',\n              '&:hover': {\n                backgroundColor: 'rgba(0,0,0,0.3)',\n              }\n            }}\n            aria-label=\"Help\"\n          >\n            <InfoOutlinedIcon />\n          </IconButton>\n        </Tooltip>\n      </Box>\n      \n      {/* Interaction guide */}\n      <InteractionGuide show={showGuide || showInteractionHint} position=\"bottom\" />\n    </>\n  );\n});\n\n// Add displayNames for memo components\nHeroBackground.displayName = 'HeroBackground';\nBackgroundController.displayName = 'BackgroundController';\n\n// Hero state management with useReducer\nconst initialHeroState = {\n  is3DVisible: false,\n  hasInitialized: false,\n  sceneIndex: 0,\n  showParticles: true,\n  sceneNameVisible: false,\n  currentSceneName: 'Sphere',\n  easterEggActive: false,\n  interactionCount: 0,\n  lastInteractionTime: 0\n};\n\nconst heroReducer = (state, action) => {\n  switch (action.type) {\n    case 'INITIALIZE':\n      return { ...state, hasInitialized: true };\n    case 'SHOW_3D':\n      return { ...state, is3DVisible: true };\n    case 'CHANGE_SCENE':\n      return {\n        ...state,\n        sceneIndex: action.payload.newIndex,\n        currentSceneName: action.payload.sceneName,\n        sceneNameVisible: true\n      };\n    case 'HIDE_SCENE_NAME':\n      return { ...state, sceneNameVisible: false };\n    case 'TOGGLE_PARTICLES':\n      return { ...state, showParticles: !state.showParticles };\n    case 'UPDATE_INTERACTION':\n      return {\n        ...state,\n        interactionCount: action.payload.count,\n        lastInteractionTime: action.payload.time\n      };\n    case 'ACTIVATE_EASTER_EGG':\n      return { ...state, easterEggActive: true };\n    case 'DEACTIVATE_EASTER_EGG':\n      return { ...state, easterEggActive: false };\n    default:\n      return state;\n  }\n};\n\n/**\n * Hero Component\n * \n * The main hero section with enhanced 3D background features:\n * - Interactive scene switching (Sphere, Cube, Torus)\n * - Particle system for ambient atmosphere\n * - Mouse-responsive animations\n */\nconst Hero = () => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const [state, dispatch] = useReducer(heroReducer, initialHeroState);\n  const interactionSequence = useRef([]);\n  \n  // Destructure state for easier access\n  const {\n    is3DVisible,\n    hasInitialized,\n    sceneIndex,\n    showParticles,\n    sceneNameVisible,\n    currentSceneName,\n    easterEggActive,\n    interactionCount,\n    lastInteractionTime\n  } = state;\n  \n  // Track rapid interactions for combo effects\n  const checkForCombo = useCallback(() => {\n    const now = Date.now();\n    if (now - lastInteractionTime < 1000) {\n      // Increment combo counter for rapid interactions\n      const newCount = interactionCount + 1;\n      // Trigger easter egg on 5 rapid clicks\n      if (newCount >= 5 && !easterEggActive) {\n        dispatch({ type: 'ACTIVATE_EASTER_EGG' });\n        setTimeout(() => dispatch({ type: 'DEACTIVATE_EASTER_EGG' }), 5000);\n        \n        // Analytics tracking\n        if (process.env.NODE_ENV === 'production') {\n          try {\n            window.gtag && window.gtag('event', 'easter_egg_activated', { \n              interaction_type: 'rapid_clicks'\n            });\n          } catch (err) {\n            console.error('Analytics error:', err);\n          }\n        }\n      }\n      dispatch({ \n        type: 'UPDATE_INTERACTION', \n        payload: { count: newCount, time: now }\n      });\n    } else {\n      // Reset combo if too much time has passed\n      dispatch({ \n        type: 'UPDATE_INTERACTION', \n        payload: { count: 1, time: now }\n      });\n    }\n  }, [lastInteractionTime, easterEggActive, interactionCount]);\n\n  // Two-phase initialization for better stability\n  useEffect(() => {\n    dispatch({ type: 'INITIALIZE' });\n    \n    const timer = setTimeout(() => {\n      dispatch({ type: 'SHOW_3D' });\n    }, 200);\n    \n    return () => clearTimeout(timer);\n  }, []);\n\n  // Get scene name based on index\n  const getSceneName = useCallback((index) => {\n    switch (index) {\n      case SHAPE_TYPES.SPHERE: return 'Sphere';\n      case SHAPE_TYPES.CUBE: return 'Cube';\n      case SHAPE_TYPES.TORUS: return 'Torus';\n      default: return 'Shape';\n    }\n  }, []);\n\n  // Handle scene click to change scene type\n  const handleSceneClick = useCallback(() => {\n    // Track interaction sequence for pattern detection\n    interactionSequence.current.push({\n      type: 'click',\n      time: Date.now()\n    });\n    \n    // Keep sequence limited to last 10 interactions\n    if (interactionSequence.current.length > 10) {\n      interactionSequence.current.shift();\n    }\n    \n    // Check for combo effects\n    checkForCombo();\n    \n    // Cycle to next scene\n    const newSceneIndex = (sceneIndex + 1) % 3;\n    const sceneName = getSceneName(newSceneIndex);\n    \n    dispatch({ \n      type: 'CHANGE_SCENE', \n      payload: { newIndex: newSceneIndex, sceneName }\n    });\n\n    // Hide scene name after 2 seconds\n    setTimeout(() => {\n      dispatch({ type: 'HIDE_SCENE_NAME' });\n    }, 2000);\n    \n    // Analytics tracking\n    if (process.env.NODE_ENV === 'production') {\n      try {\n        window.gtag && window.gtag('event', 'change_scene', { \n          scene_index: newSceneIndex,\n          scene_type: getSceneName(newSceneIndex)\n        });\n      } catch (err) {\n        console.error('Analytics error:', err);\n      }\n    }\n  }, [sceneIndex, getSceneName, checkForCombo]);\n\n  // Handle particle toggle\n  const handleToggleParticles = useCallback(() => {\n    dispatch({ type: 'TOGGLE_PARTICLES' });\n    \n    // Analytics tracking\n    if (process.env.NODE_ENV === 'production') {\n      try {\n        window.gtag && window.gtag('event', 'toggle_particles', { \n          show_particles: !showParticles\n        });\n      } catch (err) {\n        console.error('Analytics error:', err);\n      }\n    }\n  }, [showParticles]);\n\n  // Define z-index values\n  const zIndexes = {\n    background: theme.zIndex?.heroBackground || 5,\n    content: theme.zIndex?.heroContent || 10,\n    scrollIndicator: theme.zIndex?.scrollIndicator || 10\n  };\n\n  return (\n    <Box\n      id=\"hero\"\n      component=\"section\"\n      aria-label=\"Hero section\"\n      sx={{\n        width: '100%',\n        minHeight: { \n          xs: 'calc(100vh - 56px)', // 56px is the height of the mobile app bar\n          sm: 'calc(100vh - 64px)'  // 64px is the height of the desktop app bar\n        },\n        display: 'flex',\n        flexDirection: 'column',\n        position: 'relative',\n        overflow: 'visible',\n        background: `linear-gradient(145deg, ${theme.palette.background.default} 0%, ${theme.palette.background.paper} 100%)`,\n        py: { xs: theme.spacing(4), md: theme.spacing(0) },\n        isolation: 'isolate',\n        // Smooth transition for theme changes\n        transition: theme.transitions.create(['background', 'color'], {\n          duration: theme.transitions.duration.standard,\n        }),\n      }}\n    >\n      {/* Background Layer with enhanced interaction */}\n      {hasInitialized && is3DVisible && (\n        <HeroBackground \n          onSceneClick={handleSceneClick}\n          onToggleParticles={handleToggleParticles}\n          showParticles={showParticles}\n          easterEggActive={easterEggActive}\n          interactionCount={interactionCount}\n        />\n      )}\n      \n      {/* Scene name indicator - visible when changing scenes */}\n      <Fade in={sceneNameVisible} timeout={{ enter: 400, exit: 800 }}>\n        <Box\n          sx={{\n            position: 'absolute',\n            top: '30%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            backgroundColor: theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(5, 38, 45, 0.20)',\n            backdropFilter: 'blur(8px)',\n            color: theme.palette.common.white,\n            padding: theme.spacing(1, 2),\n            borderRadius: theme.shape?.radius?.pill || 999,\n            zIndex: theme.zIndex.tooltip,\n            pointerEvents: 'none',\n            typography: 'body1',\n            fontWeight: theme.typography.fontWeightMedium,\n            boxShadow: theme.shadows[4],\n            border: `1px solid ${theme.palette.divider}`,\n            transition: theme.transitions.create(['opacity', 'transform', 'background-color'], {\n              duration: theme.transitions.duration.shorter,\n            }),\n            '&:hover': {\n              backgroundColor: theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.25)' : 'rgba(5, 38, 45, 0.30)',\n            },\n          }}\n        >\n          {currentSceneName}\n        </Box>\n      </Fade>\n      \n      {/* Content Overlay Layer */}\n      <Box\n        sx={{\n          width: '100%',\n          height: '100%',\n          minHeight: '100vh',\n          display: 'flex',\n          position: 'relative',\n          zIndex: zIndexes.content,\n          alignItems: 'center',\n          justifyContent: 'flex-start',\n          pointerEvents: 'none', // Allow clicks to pass through to background\n          pt: { xs: 8, md: 0 },\n        }}\n      >\n        <HeroContent />\n      </Box>\n      \n      {/* Scroll Indicator - Desktop Only */}\n      {!isMobile && (\n        <Box \n          sx={{ \n            position: 'relative', \n            zIndex: zIndexes.scrollIndicator, \n            pointerEvents: 'auto',\n            mt: 'auto',\n          }}\n        >\n          <ScrollIndicator />\n        </Box>\n      )}\n      \n      {/* Mobile Scroll Helper - Mobile Only */}\n      {isMobile && <MobileScrollHelper />}\n    </Box>\n  );\n};\n\nexport default Hero;\n"],"names":["ErrorBoundary","Component","constructor","props","super","handleRefresh","this","setState","hasError","error","errorInfo","componentStack","showDetails","handleReload","window","location","reload","toggleDetails","prevState","state","getDerivedStateFromError","componentDidCatch","_errorInfo$componentS","console","gtag","error_message","message","error_component","componentName","error_stack","substring","error_type","name","render","fallback","errorStyles","children","_jsxs","Box","sx","_objectSpread","p","display","flexDirection","alignItems","justifyContent","minHeight","width","textAlign","_jsx","ErrorOutlineIcon","color","fontSize","mb","Typography","variant","gutterBottom","maxWidth","gap","Button","startIcon","RefreshIcon","onClick","BugReportIcon","Paper","elevation","overflow","component","fontFamily","whiteSpace","wordBreak","toString","Divider","my","backgroundColor","borderRadius","maxHeight","glassmorphism","light","background","backgroundHover","backgroundActive","border","borderHover","blur","blurHover","shadow","shadowHover","dark","chipGlass","hoverBackground","activeBackground","text","icon","overlay","medium","ripple","opacity","hoverLift","transform","transition","properties","duration","easing","_ref","_theme$shape","_theme$shape$radius","label","size","_objectWithoutProperties","_excluded","theme","useTheme","isPrimary","isDark","palette","mode","baseStyles","mx","shape","radius","pill","fontWeight","transitions","create","shorter","marginRight","marginLeft","chipGlassTokens","effects","glassmorphicStyles","backdropFilter","concat","WebkitBackdropFilter","fill","stroke","Chip","skillsRow1","skillsRow2","HeroContent","itemVariants","hidden","y","visible","ease","isMobile","useMediaQuery","breakpoints","down","heroPadding","getSpacingPreset","heroTitlePreset","getTypographyPreset","heroSubtitlePreset","heroBodyPreset","position","zIndex","pointerEvents","userSelect","px","motion","div","initial","animate","variants","staggerChildren","style","primary","secondary","flexWrap","map","skill","index","SkillTagList","scrollToSection","sectionId","options","arguments","length","undefined","offset","targetElement","document","getElementById","warn","targetPosition","getBoundingClientRect","top","pageYOffset","scrollTo","behavior","section_id","ScrollIndicator","handleClick","bottom","spacing","left","right","cursor","role","tabIndex","onKeyDown","e","key","delay","whileHover","scale","padding","typography","fontWeightRegular","repeat","Infinity","repeatType","ArrowDownwardIcon","MobileScrollHelper","fab","xs","sm","Tooltip","title","placement","whileTap","IconButton","handleScrollDown","main","contrastText","height","boxShadow","shadows","KeyboardArrowDownIcon","SHAPE_TYPES","SPHERE","CUBE","TORUS","CANVAS_SETTINGS","camera","fov","near","far","gl","antialias","alpha","powerPreference","preserveDrawingBuffer","DIMENSIONS","devicePixelRatio","sphere","segments","cube","torus","tube","radialSegments","tubularSegments","clickDetection","SHAPE_LIMITS","mobile","desktop","SceneContext","createContext","currentShapeType","switchShapeType","isTransitioning","showParticles","toggleParticles","mousePosition","x","updateMousePosition","isDragging","updateDragging","isInteractionEnabled","setInteractionEnabled","hasInteraction","SceneProvider","setCurrentShapeType","useState","setIsTransitioning","setShowParticles","setIsDragging","setMousePosition","setIsInteractionEnabled","setHasInteraction","lastInteractionTime","useRef","Date","now","interactionTimeout","useCallback","prev","setTimeout","current","clearTimeout","React","dragging","enabled","Provider","value","useSceneState","context","useContext","Error","hexToHSL","hex","replace","r","parseInt","substr","g","b","max","Math","min","l","h","s","d","getDynamicColor","time","energy","sceneType","isHovered","colors","extractThemeColors","shapeColors","baseColor","hoverColor","hover","timeShift","energyBoost","hue","saturation","lightness","hueShift","sin","THREE","lerp","emissiveHue","setHSL","emissive","emissiveIntensity","_theme$palette$second3","_theme$palette$primar3","_theme$palette$second4","_theme$palette$info3","_theme$palette$primar4","_theme$palette$second5","_theme$palette$second6","sceneColors","cubeGrid","accent","trail","primaryColor","secondaryColor","infoColor","_theme$palette$primar","_theme$palette$second","_theme$palette$info","_theme$palette$primar2","_theme$palette$second2","_theme$palette$info2","scene3d","box","info","BOX","themeColorToThreeColor","colorString","factory","initialSize","pool","activeObjects","Set","expand","get","object","pop","add","release","has","delete","push","count","i","clear","activeCount","totalCount","easterEggActive","interactionCount","propTheme","cursorWorldPosition","setCursorWorldPosition","z","shapesPool","ObjectPool","velocity","rotation","type","hovered","excitementLevel","ref","matrixAutoUpdate","autoMovement","speed","random","direction","normalize","rotationSpeed","timeOffset","lastPosition","activeShapes","setActiveShapes","hasMouseMoved","lastMouseMoveTime","movementBias","cursorPosition","prevCursorPosition","tempVector","tempVector2","clock","useMemo","getShapeColor","shapeType","hslColor","useEffect","nextActiveShapes","theta","PI","phi","acos","cos","set","randFloat","copy","forEach","cursorDirection","angle","prevCursorWorldPos","updateCursorDirection","currentPos","dx","dy","atan2","intensity","sqrt","useFrame","currentTime","getElapsedTime","timeSinceLastMove","funModeActive","funModeInfluence","directionHue","directionIntensity","interactingSpheres","autoMove","autoInfluence","pulseFrequency","pulseAmplitude","pulsePhase","pulseFactor","orbitRadius","orbitSpeed","uniqueOffset","orbitX","orbitY","orbitZ","orbitForce","sub","multiplyScalar","timeInfluence","autoVelocity","rotationMultiplier","axis","limit","absPosition","abs","pushbackForce","sign","distToCursor","distanceTo","interactionRadius","strength","attractionStrength","subVectors","clone","repulsionStrength","material","dynamicColors","dirColor","blendFactor","emissiveDir","needsUpdate","sphere1","j","sphere2","distanceSq","lengthSq","repulsionForce","forceVector","speedFactor","scaleFactor","updateMatrix","_Fragment","distance","emissiveColor","onPointerOver","onPointerOut","args","metalness","roughness","onPointerMove","event","point","transparent","onDragStart","onDragEnd","performanceMode","useThree","gridSize","cubeRefs","cubeStates","hasCursorMoved","lastCursorMoveTime","grid","xPos","zPos","gridCoords","targetY","currentY","lastActive","phase","amplitude","waveOrigin","waveActive","waveTime","timer","rippleCenter","rippleStrength","pow","cubeRef","finalHeight","dist","rippleDist","maxRippleDistance","ripplePhase","falloff","rippleEffect","distFromWave","waveRadius","waveWidth","distFromWaveEdge","waveIntensity","floor","baseRotationSpeed","scalePulse","mouseData","torusGroupRef","torusRefs","mouseWorldPos","raycaster","mouse","timeRef","torusData","Array","from","_","id","canvas","domElement","rect","clientX","clientY","setFromCamera","intersectPoint","ray","intersectPlane","torusGeometry","materials","transmission","thickness","slice","meshes","filter","Boolean","intersects","intersectObjects","data","intersected","indexOf","onPointerDown","randomTorus","setScalar","addEventListener","removeEventListener","dt","t","ROTATION_SPEED","mesh","targetScale","force","dynamic","onDoubleClick","el","geometry","transitionProgress","setTransitionProgress","startTime","transitionDuration","updateTransition","elapsed","progress","requestAnimationFrame","activeColor","themeColor","handleSceneClick","SphereScene","BoxScene","TorusScene","LoadingFallback","default","CircularProgress","enableAutoRotate","rotateSpeed","controlsRef","lastInteraction","setLastInteraction","isAutoRotating","setIsAutoRotating","lookAt","target","startTarget","updateTarget","easeProgress","newTarget","lerpVectors","idleTime","shouldAutoRotate","autoRotate","dampingFactor","handleInteraction","PerspectiveCamera","makeDefault","OrbitControls","enableZoom","minDistance","maxDistance","zoomSpeed","enablePan","minPolarAngle","maxPolarAngle","autoRotateSpeed","onStart","onEnd","onChange","Background3DInner","onSceneClick","InteractiveCamera","ActiveScene","_ref2","isLoading","setIsLoading","handleLoaded","canvasStyle","standard","Canvas","visibility","touchAction","onCreated","dpr","active","show","autoHideDelay","setVisible","isTouchDevice","setIsTouchDevice","navigator","maxTouchPoints","instructions","action","Fade","in","timeout","enter","exit","center","bgcolor","TouchAppIcon","mt","MouseIcon","ThreeDRotationIcon","HeroBackground","memo","onToggleParticles","showInteractionHint","setShowInteractionHint","hideTimer","showTimer","BackgroundController","showGuide","setShowGuide","handleBackgroundClick","handleToggleGuide","Background3D","InfoOutlinedIcon","InteractionGuide","displayName","initialHeroState","is3DVisible","hasInitialized","sceneIndex","sceneNameVisible","currentSceneName","heroReducer","payload","newIndex","sceneName","Hero","_theme$zIndex","_theme$zIndex2","_theme$zIndex3","dispatch","useReducer","interactionSequence","checkForCombo","newCount","interaction_type","err","getSceneName","shift","newSceneIndex","scene_index","scene_type","handleToggleParticles","show_particles","zIndexes","heroBackground","content","heroContent","scrollIndicator","paper","py","md","isolation","common","white","tooltip","fontWeightMedium","divider","pt"],"sourceRoot":""}